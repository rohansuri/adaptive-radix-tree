Perf stat only scans with scan length from 0 to 50.

To honour the JVM settings for this build a new JVM will be forked. Please consider using the daemon: https://docs.gradle.org/5.6.2/userguide/gradle_daemon.html.
Daemon will be stopped at the end of the build stopping after processing

> Configure project :
maxParallelForks for task testJUnit4=2
maxParallelForks for task test=2
Configuration(s) specified but the install task does not exist in project :.

> Task :clean

> Task :compileJava

> Task :processResources NO-SOURCE
> Task :classes
> Task :compileTestJava
> Task :processTestResources
> Task :testClasses
> Task :compileJmhJava
> Task :processJmhResources NO-SOURCE
> Task :jmhClasses

> Task :jmhRunBytecodeGenerator
Processing 56 classes from /home/rohansuri/adaptive-radix-tree/art/build/classes/java/jmh with "reflection" generator
Writing out Java source to /home/rohansuri/adaptive-radix-tree/art/build/jmh-generated-sources and resources to /home/rohansuri/adaptive-radix-tree/art/build/jmh-generated-resources

> Task :jmhCompileGeneratedClasses
> Task :jmhJar
Iteration   1: 
> Task :jmh
# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 0, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 0.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

307799689.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  307799689.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,12,98,10,750      L1-dcache-loads                                               (28.69%)
    2,12,01,64,765      L1-dcache-loads                                               (36.67%)
       6,37,40,853      L1-dcache-load-misses     #    3.00% of all L1-dcache hits    (22.18%)
       2,39,65,637      LLC-loads                                                     (22.08%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,09,51,091      L1-icache-load-misses                                         (29.90%)
    2,15,52,23,174      dTLB-loads                                                    (28.54%)
         58,12,091      dTLB-load-misses          #    0.27% of all dTLB cache hits   (19.35%)
         33,15,365      iTLB-loads                                                    (19.08%)
          4,55,290      iTLB-load-misses          #   13.73% of all iTLB cache hits   (28.49%)
   <not supported>      L1-dcache-prefetches                                        
       1,99,65,193      L1-dcache-prefetch-misses                                     (36.28%)

       2.291834592 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 0, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 0.98% complete, ETA 00:03:58
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 163445746.714 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  163445746.714 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,10,98,10,512      L1-dcache-loads                                               (37.43%)
    1,09,76,27,022      L1-dcache-loads                                               (39.05%)
       5,41,20,598      L1-dcache-load-misses     #    4.90% of all L1-dcache hits    (21.72%)
       2,88,88,408      LLC-loads                                                     (20.83%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         45,99,548      L1-icache-load-misses                                         (30.55%)
    1,09,73,54,246      dTLB-loads                                                    (28.54%)
         99,42,818      dTLB-load-misses          #    0.91% of all dTLB cache hits   (19.17%)
          9,65,227      iTLB-loads                                                    (18.64%)
            57,670      iTLB-load-misses          #    5.97% of all iTLB cache hits   (27.94%)
   <not supported>      L1-dcache-prefetches                                        
       1,76,08,926      L1-dcache-prefetch-misses                                     (37.16%)

       2.094121116 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 1, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 1.96% complete, ETA 00:03:53
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 334758737.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  334758737.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,75,01,49,203      L1-dcache-loads                                               (31.16%)
    1,73,67,25,827      L1-dcache-loads                                               (34.44%)
       5,42,06,400      L1-dcache-load-misses     #    3.11% of all L1-dcache hits    (31.35%)
       2,02,07,324      LLC-loads                                                     (20.29%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,02,04,407      L1-icache-load-misses                                         (29.41%)
    1,75,37,52,342      dTLB-loads                                                    (25.10%)
         63,70,896      dTLB-load-misses          #    0.36% of all dTLB cache hits   (24.47%)
         28,08,982      iTLB-loads                                                    (22.99%)
          4,97,972      iTLB-load-misses          #   17.73% of all iTLB cache hits   (30.31%)
   <not supported>      L1-dcache-prefetches                                        
       1,67,90,453      L1-dcache-prefetch-misses                                     (37.50%)

       2.016995428 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 1, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 2.94% complete, ETA 00:03:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 170389319.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  170389319.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,07,25,83,051      L1-dcache-loads                                               (29.82%)
    1,04,05,04,863      L1-dcache-loads                                               (30.10%)
       5,16,01,340      L1-dcache-load-misses     #    4.88% of all L1-dcache hits    (25.41%)
       2,70,40,598      LLC-loads                                                     (29.69%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         40,23,061      L1-icache-load-misses                                         (35.67%)
    1,04,93,51,838      dTLB-loads                                                    (29.00%)
         86,01,018      dTLB-load-misses          #    0.82% of all dTLB cache hits   (19.09%)
          9,64,035      iTLB-loads                                                    (18.59%)
          1,02,001      iTLB-load-misses          #   10.58% of all iTLB cache hits   (27.57%)
   <not supported>      L1-dcache-prefetches                                        
       1,54,54,025      L1-dcache-prefetch-misses                                     (36.93%)

       1.984525370 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 2, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 3.92% complete, ETA 00:03:42
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 354732605.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  354732605.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,76,66,69,380      L1-dcache-loads                                               (31.81%)
    1,66,87,78,228      L1-dcache-loads                                               (24.07%)
       5,34,49,643      L1-dcache-load-misses     #    3.11% of all L1-dcache hits    (28.61%)
       2,03,05,506      LLC-loads                                                     (30.27%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         93,84,089      L1-icache-load-misses                                         (36.24%)
    1,85,45,88,311      dTLB-loads                                                    (26.33%)
         51,65,460      dTLB-load-misses          #    0.28% of all dTLB cache hits   (20.06%)
         26,07,560      iTLB-loads                                                    (18.95%)
          4,10,713      iTLB-load-misses          #   15.75% of all iTLB cache hits   (28.09%)
   <not supported>      L1-dcache-prefetches                                        
       1,77,28,942      L1-dcache-prefetch-misses                                     (36.91%)

       2.034374776 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 2, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 4.90% complete, ETA 00:03:39
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 174196571.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  174196571.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,30,09,49,000      L1-dcache-loads                                               (30.87%)
    1,26,37,94,331      L1-dcache-loads                                               (23.61%)
       5,42,07,284      L1-dcache-load-misses     #    4.23% of all L1-dcache hits    (23.26%)
       2,06,80,869      LLC-loads                                                     (29.33%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         51,60,994      L1-icache-load-misses                                         (35.78%)
    1,19,41,47,953      dTLB-loads                                                    (21.03%)
         78,70,734      dTLB-load-misses          #    0.66% of all dTLB cache hits   (22.94%)
          6,50,399      iTLB-loads                                                    (19.42%)
          1,30,360      iTLB-load-misses          #   20.04% of all iTLB cache hits   (25.33%)
   <not supported>      L1-dcache-prefetches                                        
       2,69,29,284      L1-dcache-prefetch-misses                                     (32.26%)

       1.984540260 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 3, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 5.88% complete, ETA 00:03:36
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 306097522.750 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  306097522.750 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,08,02,66,317      L1-dcache-loads                                               (33.95%)
    1,96,13,33,268      L1-dcache-loads                                               (24.89%)
       6,11,47,401      L1-dcache-load-misses     #    3.03% of all L1-dcache hits    (22.58%)
       2,32,83,173      LLC-loads                                                     (26.76%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         81,49,008      L1-icache-load-misses                                         (34.34%)
    1,99,07,30,047      dTLB-loads                                                    (27.29%)
         58,48,432      dTLB-load-misses          #    0.29% of all dTLB cache hits   (20.66%)
         30,78,892      iTLB-loads                                                    (19.98%)
          3,39,637      iTLB-load-misses          #   11.03% of all iTLB cache hits   (27.70%)
   <not supported>      L1-dcache-prefetches                                        
       2,24,89,309      L1-dcache-prefetch-misses                                     (35.02%)

       2.198817098 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 3, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 6.86% complete, ETA 00:03:36
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 181490015.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  181490015.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,31,45,72,866      L1-dcache-loads                                               (36.90%)
    1,34,31,59,926      L1-dcache-loads                                               (30.24%)
       5,50,68,133      L1-dcache-load-misses     #    4.14% of all L1-dcache hits    (22.07%)
       2,99,17,629      LLC-loads                                                     (27.96%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         81,35,026      L1-icache-load-misses                                         (31.00%)
    1,28,70,67,575      dTLB-loads                                                    (28.17%)
       1,03,22,001      dTLB-load-misses          #    0.80% of all dTLB cache hits   (19.93%)
         15,09,218      iTLB-loads                                                    (19.15%)
          2,85,826      iTLB-load-misses          #   18.94% of all iTLB cache hits   (28.11%)
   <not supported>      L1-dcache-prefetches                                        
       1,96,41,536      L1-dcache-prefetch-misses                                     (36.35%)

       2.095077674 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 4, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 7.84% complete, ETA 00:03:34
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 360664505.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  360664505.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,81,30,51,765      L1-dcache-loads                                               (36.99%)
    1,81,95,16,648      L1-dcache-loads                                               (32.91%)
       5,97,50,866      L1-dcache-load-misses     #    3.29% of all L1-dcache hits    (21.91%)
       2,25,27,058      LLC-loads                                                     (23.05%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,20,19,425      L1-icache-load-misses                                         (30.01%)
    1,80,39,57,586      dTLB-loads                                                    (21.10%)
         58,84,928      dTLB-load-misses          #    0.33% of all dTLB cache hits   (25.61%)
         30,60,172      iTLB-loads                                                    (19.49%)
          4,76,141      iTLB-load-misses          #   15.56% of all iTLB cache hits   (29.10%)
   <not supported>      L1-dcache-prefetches                                        
       1,63,16,614      L1-dcache-prefetch-misses                                     (38.25%)

       2.114775210 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 4, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 8.82% complete, ETA 00:03:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 174390861.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  174390861.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,24,91,75,534      L1-dcache-loads                                               (38.54%)
    1,22,17,94,763      L1-dcache-loads                                               (39.39%)
       5,37,73,436      L1-dcache-load-misses     #    4.35% of all L1-dcache hits    (23.51%)
       2,72,11,749      LLC-loads                                                     (20.99%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         43,97,695      L1-icache-load-misses                                         (30.19%)
    1,29,49,73,170      dTLB-loads                                                    (27.66%)
         92,93,033      dTLB-load-misses          #    0.72% of all dTLB cache hits   (18.60%)
         15,19,231      iTLB-loads                                                    (18.67%)
          1,60,695      iTLB-load-misses          #   10.58% of all iTLB cache hits   (27.69%)
   <not supported>      L1-dcache-prefetches                                        
       1,60,64,301      L1-dcache-prefetch-misses                                     (37.18%)

       2.064168164 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 5, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 9.80% complete, ETA 00:03:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 310412822.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  310412822.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,12,72,94,001      L1-dcache-loads                                               (37.36%)
    2,11,06,32,167      L1-dcache-loads                                               (36.32%)
       6,69,75,441      L1-dcache-load-misses     #    3.16% of all L1-dcache hits    (21.96%)
       2,55,24,190      LLC-loads                                                     (23.07%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,05,03,647      L1-icache-load-misses                                         (30.63%)
    2,10,76,49,924      dTLB-loads                                                    (25.58%)
         62,09,235      dTLB-load-misses          #    0.29% of all dTLB cache hits   (23.84%)
         34,80,949      iTLB-loads                                                    (19.98%)
          3,90,765      iTLB-load-misses          #   11.23% of all iTLB cache hits   (28.49%)
   <not supported>      L1-dcache-prefetches                                        
       2,31,99,690      L1-dcache-prefetch-misses                                     (36.92%)

       2.706088165 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 5, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 10.78% complete, ETA 00:03:33
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 172114481.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  172114481.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,15,56,34,032      L1-dcache-loads                                               (33.35%)
    1,16,90,57,588      L1-dcache-loads                                               (32.45%)
       5,60,49,075      L1-dcache-load-misses     #    4.82% of all L1-dcache hits    (24.20%)
       2,87,93,347      LLC-loads                                                     (23.48%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         53,88,453      L1-icache-load-misses                                         (32.08%)
    1,16,21,12,894      dTLB-loads                                                    (22.10%)
       1,02,53,018      dTLB-load-misses          #    0.88% of all dTLB cache hits   (25.18%)
         12,61,565      iTLB-loads                                                    (18.98%)
          2,04,285      iTLB-load-misses          #   16.19% of all iTLB cache hits   (27.13%)
   <not supported>      L1-dcache-prefetches                                        
       1,79,40,841      L1-dcache-prefetch-misses                                     (35.20%)

       2.024642387 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 6, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 11.76% complete, ETA 00:03:29
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 352836954.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  352836954.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,79,56,57,712      L1-dcache-loads                                               (30.49%)
    1,80,02,04,263      L1-dcache-loads                                               (29.60%)
       5,43,84,957      L1-dcache-load-misses     #    3.02% of all L1-dcache hits    (33.25%)
       2,20,79,286      LLC-loads                                                     (28.65%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,23,61,458      L1-icache-load-misses                                         (31.09%)
    1,83,09,99,722      dTLB-loads                                                    (20.59%)
         58,62,314      dTLB-load-misses          #    0.32% of all dTLB cache hits   (26.04%)
         29,60,226      iTLB-loads                                                    (19.08%)
          4,09,200      iTLB-load-misses          #   13.82% of all iTLB cache hits   (27.99%)
   <not supported>      L1-dcache-prefetches                                        
       1,74,45,330      L1-dcache-prefetch-misses                                     (35.76%)

       2.078673801 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 6, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 12.75% complete, ETA 00:03:27
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 169155478.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  169155478.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,36,90,55,870      L1-dcache-loads                                               (36.67%)
    1,41,44,03,675      L1-dcache-loads                                               (24.97%)
       6,24,76,862      L1-dcache-load-misses     #    4.49% of all L1-dcache hits    (22.29%)
       3,26,91,499      LLC-loads                                                     (28.61%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         58,03,140      L1-icache-load-misses                                         (38.07%)
    1,35,18,44,146      dTLB-loads                                                    (29.19%)
       1,06,01,232      dTLB-load-misses          #    0.78% of all dTLB cache hits   (19.49%)
         14,17,886      iTLB-loads                                                    (18.67%)
          2,41,233      iTLB-load-misses          #   17.01% of all iTLB cache hits   (27.31%)
   <not supported>      L1-dcache-prefetches                                        
       2,02,66,337      L1-dcache-prefetch-misses                                     (36.12%)

       2.079074243 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 7, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 13.73% complete, ETA 00:03:24
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 300513623.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  300513623.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,82,43,54,117      L1-dcache-loads                                               (36.47%)
    1,77,38,15,991      L1-dcache-loads                                               (30.04%)
       5,37,13,926      L1-dcache-load-misses     #    2.99% of all L1-dcache hits    (38.82%)
       2,03,07,649      LLC-loads                                                     (23.58%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         98,22,397      L1-icache-load-misses                                         (31.65%)
    1,79,47,43,428      dTLB-loads                                                    (33.40%)
         48,33,065      dTLB-load-misses          #    0.27% of all dTLB cache hits   (20.03%)
         30,02,953      iTLB-loads                                                    (18.65%)
          2,02,448      iTLB-load-misses          #    6.74% of all iTLB cache hits   (27.80%)
   <not supported>      L1-dcache-prefetches                                        
       1,99,20,071      L1-dcache-prefetch-misses                                     (37.03%)

       2.145128459 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 7, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 14.71% complete, ETA 00:03:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 172252048.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  172252048.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,25,59,63,236      L1-dcache-loads                                               (29.57%)
    1,24,08,60,881      L1-dcache-loads                                               (34.27%)
       5,38,71,705      L1-dcache-load-misses     #    4.32% of all L1-dcache hits    (23.11%)
       2,67,38,657      LLC-loads                                                     (23.23%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         54,15,913      L1-icache-load-misses                                         (33.05%)
    1,19,30,13,711      dTLB-loads                                                    (28.12%)
         87,93,679      dTLB-load-misses          #    0.74% of all dTLB cache hits   (19.40%)
         13,70,406      iTLB-loads                                                    (19.43%)
          2,33,442      iTLB-load-misses          #   17.03% of all iTLB cache hits   (28.28%)
   <not supported>      L1-dcache-prefetches                                        
       1,66,67,278      L1-dcache-prefetch-misses                                     (37.19%)

       2.054771185 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 8, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 15.69% complete, ETA 00:03:19
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 302120530.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  302120530.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,16,04,36,824      L1-dcache-loads                                               (34.62%)
    2,11,14,72,883      L1-dcache-loads                                               (35.35%)
       6,90,39,100      L1-dcache-load-misses     #    3.23% of all L1-dcache hits    (22.68%)
       2,62,98,270      LLC-loads                                                     (22.57%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,25,32,557      L1-icache-load-misses                                         (32.29%)
    2,02,95,63,583      dTLB-loads                                                    (23.71%)
         55,55,874      dTLB-load-misses          #    0.27% of all dTLB cache hits   (24.29%)
         31,58,611      iTLB-loads                                                    (18.63%)
          3,60,388      iTLB-load-misses          #   11.41% of all iTLB cache hits   (27.04%)
   <not supported>      L1-dcache-prefetches                                        
       2,97,95,780      L1-dcache-prefetch-misses                                     (35.70%)

       2.256986009 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 8, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 16.67% complete, ETA 00:03:18
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 186728316.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  186728316.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,32,76,38,967      L1-dcache-loads                                               (27.82%)
    1,31,58,28,860      L1-dcache-loads                                               (28.92%)
       5,90,64,349      L1-dcache-load-misses     #    4.47% of all L1-dcache hits    (32.75%)
       2,99,92,882      LLC-loads                                                     (27.23%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         92,45,106      L1-icache-load-misses                                         (29.10%)
    1,31,41,30,954      dTLB-loads                                                    (21.77%)
         98,40,215      dTLB-load-misses          #    0.75% of all dTLB cache hits   (24.31%)
         13,46,339      iTLB-loads                                                    (20.30%)
          2,64,273      iTLB-load-misses          #   19.63% of all iTLB cache hits   (27.62%)
   <not supported>      L1-dcache-prefetches                                        
       1,75,93,627      L1-dcache-prefetch-misses                                     (34.99%)

       2.143907591 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 9, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 17.65% complete, ETA 00:03:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 315144446.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  315144446.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,10,67,11,167      L1-dcache-loads                                               (36.86%)
    2,07,74,58,064      L1-dcache-loads                                               (36.21%)
       6,80,43,284      L1-dcache-load-misses     #    3.25% of all L1-dcache hits    (23.79%)
       2,42,84,786      LLC-loads                                                     (21.61%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,25,60,697      L1-icache-load-misses                                         (30.41%)
    2,08,34,47,639      dTLB-loads                                                    (22.70%)
         65,34,474      dTLB-load-misses          #    0.31% of all dTLB cache hits   (24.44%)
         35,96,861      iTLB-loads                                                    (19.40%)
          3,65,726      iTLB-load-misses          #   10.17% of all iTLB cache hits   (28.70%)
   <not supported>      L1-dcache-prefetches                                        
       2,06,15,128      L1-dcache-prefetch-misses                                     (37.67%)

       2.262837114 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 9, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 18.63% complete, ETA 00:03:14
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 173243427.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  173243427.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,17,68,31,937      L1-dcache-loads                                               (34.14%)
    1,16,36,26,982      L1-dcache-loads                                               (33.26%)
       5,59,68,948      L1-dcache-load-misses     #    4.78% of all L1-dcache hits    (23.62%)
       2,91,36,373      LLC-loads                                                     (23.62%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         63,76,014      L1-icache-load-misses                                         (30.90%)
    1,16,08,41,115      dTLB-loads                                                    (26.36%)
         98,68,751      dTLB-load-misses          #    0.85% of all dTLB cache hits   (21.50%)
         16,83,464      iTLB-loads                                                    (19.74%)
          2,54,315      iTLB-load-misses          #   15.11% of all iTLB cache hits   (27.46%)
   <not supported>      L1-dcache-prefetches                                        
       1,89,12,025      L1-dcache-prefetch-misses                                     (35.47%)

       2.031417023 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 10, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 19.61% complete, ETA 00:03:11
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 336355341.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  336355341.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,82,27,96,526      L1-dcache-loads                                               (28.71%)
    1,71,30,93,107      L1-dcache-loads                                               (23.47%)
       5,77,06,367      L1-dcache-load-misses     #    3.26% of all L1-dcache hits    (29.32%)
       2,23,98,335      LLC-loads                                                     (29.13%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,27,82,390      L1-icache-load-misses                                         (31.54%)
    1,87,82,18,920      dTLB-loads                                                    (31.10%)
         64,00,783      dTLB-load-misses          #    0.34% of all dTLB cache hits   (31.73%)
         38,97,187      iTLB-loads                                                    (29.27%)
          3,81,461      iTLB-load-misses          #    9.79% of all iTLB cache hits   (27.78%)
   <not supported>      L1-dcache-prefetches                                        
       1,75,25,668      L1-dcache-prefetch-misses                                     (36.79%)

       2.059773001 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 10, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 20.59% complete, ETA 00:03:08
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 145951271.857 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  145951271.857 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,44,86,35,967      L1-dcache-loads                                               (34.08%)
    1,45,19,53,436      L1-dcache-loads                                               (37.55%)
       6,34,83,997      L1-dcache-load-misses     #    4.38% of all L1-dcache hits    (22.60%)
       2,25,41,929      LLC-loads                                                     (22.31%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         76,74,303      L1-icache-load-misses                                         (31.08%)
    1,39,89,71,244      dTLB-loads                                                    (27.73%)
         84,14,287      dTLB-load-misses          #    0.60% of all dTLB cache hits   (18.70%)
          3,24,175      iTLB-loads                                                    (17.68%)
          1,54,962      iTLB-load-misses          #   47.80% of all iTLB cache hits   (26.43%)
   <not supported>      L1-dcache-prefetches                                        
       3,01,55,714      L1-dcache-prefetch-misses                                     (35.20%)

       2.083885786 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 11, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 21.57% complete, ETA 00:03:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 308717344.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  308717344.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,96,21,43,934      L1-dcache-loads                                               (38.25%)
    1,93,67,20,143      L1-dcache-loads                                               (29.64%)
       6,04,63,431      L1-dcache-load-misses     #    3.10% of all L1-dcache hits    (21.83%)
       2,41,14,253      LLC-loads                                                     (28.38%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         82,71,686      L1-icache-load-misses                                         (32.02%)
    2,01,45,41,112      dTLB-loads                                                    (28.93%)
         64,56,740      dTLB-load-misses          #    0.32% of all dTLB cache hits   (19.35%)
         35,75,726      iTLB-loads                                                    (19.08%)
          3,32,675      iTLB-load-misses          #    9.30% of all iTLB cache hits   (28.34%)
   <not supported>      L1-dcache-prefetches                                        
       1,98,24,907      L1-dcache-prefetch-misses                                     (37.74%)

       2.197938233 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 11, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 22.55% complete, ETA 00:03:04
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 190386825.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  190386825.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,19,74,75,754      L1-dcache-loads                                               (34.96%)
    1,16,63,89,552      L1-dcache-loads                                               (31.62%)
       5,87,71,790      L1-dcache-load-misses     #    4.97% of all L1-dcache hits    (22.95%)
       2,95,64,246      LLC-loads                                                     (27.16%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         56,88,324      L1-icache-load-misses                                         (29.09%)
    1,20,30,96,657      dTLB-loads                                                    (20.71%)
         96,95,579      dTLB-load-misses          #    0.81% of all dTLB cache hits   (27.65%)
         13,98,989      iTLB-loads                                                    (21.77%)
          2,90,666      iTLB-load-misses          #   20.78% of all iTLB cache hits   (29.19%)
   <not supported>      L1-dcache-prefetches                                        
       1,63,38,101      L1-dcache-prefetch-misses                                     (37.38%)

       2.097087745 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 12, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 23.53% complete, ETA 00:03:01
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 297443817.750 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  297443817.750 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,10,77,37,987      L1-dcache-loads                                               (37.66%)
    2,08,56,01,169      L1-dcache-loads                                               (30.77%)
       6,14,14,099      L1-dcache-load-misses     #    2.93% of all L1-dcache hits    (21.37%)
       2,34,38,793      LLC-loads                                                     (25.31%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,09,45,384      L1-icache-load-misses                                         (34.85%)
    2,08,92,09,890      dTLB-loads                                                    (28.72%)
         63,97,705      dTLB-load-misses          #    0.31% of all dTLB cache hits   (19.35%)
         32,47,680      iTLB-loads                                                    (19.50%)
          2,97,784      iTLB-load-misses          #    9.17% of all iTLB cache hits   (28.54%)
   <not supported>      L1-dcache-prefetches                                        
       2,28,54,716      L1-dcache-prefetch-misses                                     (37.28%)

       2.196671690 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 12, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 24.51% complete, ETA 00:02:59
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 181299636.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  181299636.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,26,81,19,011      L1-dcache-loads                                               (25.79%)
    1,21,85,32,225      L1-dcache-loads                                               (23.89%)
       5,94,91,004      L1-dcache-load-misses     #    4.78% of all L1-dcache hits    (29.23%)
       3,03,14,020      LLC-loads                                                     (35.39%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         58,19,695      L1-icache-load-misses                                         (37.43%)
    1,31,09,81,236      dTLB-loads                                                    (21.14%)
       1,10,45,268      dTLB-load-misses          #    0.84% of all dTLB cache hits   (26.09%)
         17,37,123      iTLB-loads                                                    (18.34%)
          2,85,753      iTLB-load-misses          #   16.45% of all iTLB cache hits   (27.73%)
   <not supported>      L1-dcache-prefetches                                        
       1,88,22,318      L1-dcache-prefetch-misses                                     (36.98%)

       2.045507336 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 13, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 25.49% complete, ETA 00:02:56
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 307902358.750 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  307902358.750 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,92,69,84,798      L1-dcache-loads                                               (35.57%)
    1,90,97,57,813      L1-dcache-loads                                               (36.98%)
       6,72,92,465      L1-dcache-load-misses     #    3.51% of all L1-dcache hits    (21.25%)
       2,48,50,520      LLC-loads                                                     (22.46%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         78,04,995      L1-icache-load-misses                                         (31.28%)
    1,94,64,99,849      dTLB-loads                                                    (22.52%)
         53,27,257      dTLB-load-misses          #    0.27% of all dTLB cache hits   (27.05%)
         28,20,441      iTLB-loads                                                    (19.42%)
          2,03,034      iTLB-load-misses          #    7.20% of all iTLB cache hits   (28.91%)
   <not supported>      L1-dcache-prefetches                                        
       2,78,63,607      L1-dcache-prefetch-misses                                     (37.90%)

       2.203042370 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 13, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 26.47% complete, ETA 00:02:54
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 183169596.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  183169596.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,32,45,47,795      L1-dcache-loads                                               (31.36%)
    1,29,84,16,854      L1-dcache-loads                                               (39.03%)
       5,82,41,485      L1-dcache-load-misses     #    4.44% of all L1-dcache hits    (21.96%)
       2,78,30,966      LLC-loads                                                     (22.18%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         61,50,540      L1-icache-load-misses                                         (30.55%)
    1,32,96,76,900      dTLB-loads                                                    (20.35%)
         99,00,637      dTLB-load-misses          #    0.74% of all dTLB cache hits   (26.06%)
         15,75,519      iTLB-loads                                                    (18.74%)
          3,02,562      iTLB-load-misses          #   19.20% of all iTLB cache hits   (27.88%)
   <not supported>      L1-dcache-prefetches                                        
       1,75,94,379      L1-dcache-prefetch-misses                                     (36.45%)

       2.106126076 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 14, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 27.45% complete, ETA 00:02:52
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 338594901.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  338594901.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,87,22,70,555      L1-dcache-loads                                               (35.93%)
    1,86,19,35,197      L1-dcache-loads                                               (38.34%)
       5,73,35,811      L1-dcache-load-misses     #    3.07% of all L1-dcache hits    (22.30%)
       2,24,01,982      LLC-loads                                                     (21.29%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,22,79,178      L1-icache-load-misses                                         (29.87%)
    1,93,81,76,013      dTLB-loads                                                    (27.94%)
         51,49,470      dTLB-load-misses          #    0.27% of all dTLB cache hits   (21.16%)
         27,23,056      iTLB-loads                                                    (19.11%)
          4,02,983      iTLB-load-misses          #   14.80% of all iTLB cache hits   (28.35%)
   <not supported>      L1-dcache-prefetches                                        
       1,77,11,137      L1-dcache-prefetch-misses                                     (37.55%)

       2.049585264 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 14, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 28.43% complete, ETA 00:02:49
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 168715722.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  168715722.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,03,93,67,163      L1-dcache-loads                                               (39.12%)
    1,01,24,04,313      L1-dcache-loads                                               (38.49%)
       4,98,96,539      L1-dcache-load-misses     #    4.86% of all L1-dcache hits    (22.13%)
       2,64,73,909      LLC-loads                                                     (26.06%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         44,59,445      L1-icache-load-misses                                         (35.18%)
    1,06,27,90,209      dTLB-loads                                                    (26.98%)
         90,08,234      dTLB-load-misses          #    0.85% of all dTLB cache hits   (18.69%)
          9,51,225      iTLB-loads                                                    (18.70%)
            91,312      iTLB-load-misses          #    9.60% of all iTLB cache hits   (27.96%)
   <not supported>      L1-dcache-prefetches                                        
       1,54,43,527      L1-dcache-prefetch-misses                                     (37.39%)

       1.972836243 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 15, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 29.41% complete, ETA 00:02:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 308251586.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  308251586.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,01,52,50,757      L1-dcache-loads                                               (30.50%)
    1,98,86,79,178      L1-dcache-loads                                               (28.50%)
       5,99,41,024      L1-dcache-load-misses     #    2.99% of all L1-dcache hits    (35.02%)
       2,36,68,231      LLC-loads                                                     (29.38%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,18,13,968      L1-icache-load-misses                                         (31.44%)
    1,99,82,25,699      dTLB-loads                                                    (21.41%)
         51,74,048      dTLB-load-misses          #    0.26% of all dTLB cache hits   (27.53%)
         30,19,311      iTLB-loads                                                    (19.27%)
          3,20,262      iTLB-load-misses          #   10.61% of all iTLB cache hits   (28.38%)
   <not supported>      L1-dcache-prefetches                                        
       2,03,65,984      L1-dcache-prefetch-misses                                     (37.47%)

       2.229309312 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 15, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 30.39% complete, ETA 00:02:44
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 174962561.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  174962561.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,34,09,70,546      L1-dcache-loads                                               (27.93%)
    1,30,94,12,824      L1-dcache-loads                                               (28.89%)
       6,00,06,798      L1-dcache-load-misses     #    4.53% of all L1-dcache hits    (24.63%)
       3,07,07,666      LLC-loads                                                     (24.18%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         77,72,839      L1-icache-load-misses                                         (33.26%)
    1,30,66,18,515      dTLB-loads                                                    (28.40%)
       1,07,69,991      dTLB-load-misses          #    0.82% of all dTLB cache hits   (20.18%)
         15,34,000      iTLB-loads                                                    (18.72%)
          2,71,765      iTLB-load-misses          #   17.72% of all iTLB cache hits   (25.38%)
   <not supported>      L1-dcache-prefetches                                        
       2,02,17,695      L1-dcache-prefetch-misses                                     (30.20%)

       2.126529188 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 16, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 31.37% complete, ETA 00:02:42
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 346231197.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  346231197.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,62,96,20,598      L1-dcache-loads                                               (28.32%)
    1,63,21,15,956      L1-dcache-loads                                               (29.10%)
       5,29,27,325      L1-dcache-load-misses     #    3.25% of all L1-dcache hits    (27.56%)
       2,03,51,838      LLC-loads                                                     (23.59%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,22,33,671      L1-icache-load-misses                                         (28.82%)
    1,71,17,67,560      dTLB-loads                                                    (25.12%)
         58,75,634      dTLB-load-misses          #    0.34% of all dTLB cache hits   (20.59%)
         26,26,283      iTLB-loads                                                    (19.89%)
          3,40,017      iTLB-load-misses          #   12.95% of all iTLB cache hits   (27.98%)
   <not supported>      L1-dcache-prefetches                                        
       1,67,86,308      L1-dcache-prefetch-misses                                     (36.71%)

       1.981675067 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 16, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 32.35% complete, ETA 00:02:40
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 171763707.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  171763707.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,33,81,40,293      L1-dcache-loads                                               (33.64%)
    1,33,05,72,429      L1-dcache-loads                                               (24.50%)
       5,61,69,941      L1-dcache-load-misses     #    4.21% of all L1-dcache hits    (24.48%)
       2,04,71,894      LLC-loads                                                     (29.58%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         59,10,363      L1-icache-load-misses                                         (35.03%)
    1,29,07,01,756      dTLB-loads                                                    (21.20%)
         78,07,340      dTLB-load-misses          #    0.60% of all dTLB cache hits   (26.09%)
          8,30,362      iTLB-loads                                                    (20.74%)
          3,16,615      iTLB-load-misses          #   38.13% of all iTLB cache hits   (27.02%)
   <not supported>      L1-dcache-prefetches                                        
       2,74,44,235      L1-dcache-prefetch-misses                                     (33.47%)

       1.990806006 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 17, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 33.33% complete, ETA 00:02:37
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 346307639.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  346307639.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,62,83,51,266      L1-dcache-loads                                               (28.91%)
    1,58,27,60,948      L1-dcache-loads                                               (26.13%)
       5,01,61,170      L1-dcache-load-misses     #    3.12% of all L1-dcache hits    (25.52%)
       1,96,54,415      LLC-loads                                                     (27.62%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         79,22,732      L1-icache-load-misses                                         (33.25%)
    1,58,63,73,543      dTLB-loads                                                    (25.34%)
         48,35,368      dTLB-load-misses          #    0.30% of all dTLB cache hits   (20.71%)
         28,46,699      iTLB-loads                                                    (18.86%)
          3,28,048      iTLB-load-misses          #   11.52% of all iTLB cache hits   (26.84%)
   <not supported>      L1-dcache-prefetches                                        
       1,67,80,558      L1-dcache-prefetch-misses                                     (34.85%)

       1.960541716 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 17, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 34.31% complete, ETA 00:02:34
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 163879387.143 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  163879387.143 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,54,45,86,217      L1-dcache-loads                                               (37.84%)
    1,48,22,89,177      L1-dcache-loads                                               (38.22%)
       6,35,10,163      L1-dcache-load-misses     #    4.20% of all L1-dcache hits    (21.94%)
       3,31,39,145      LLC-loads                                                     (20.99%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         85,64,704      L1-icache-load-misses                                         (30.59%)
    1,45,37,57,092      dTLB-loads                                                    (28.36%)
       1,16,61,669      dTLB-load-misses          #    0.80% of all dTLB cache hits   (19.17%)
         13,24,944      iTLB-loads                                                    (19.04%)
            89,190      iTLB-load-misses          #    6.73% of all iTLB cache hits   (28.19%)
   <not supported>      L1-dcache-prefetches                                        
       2,31,49,670      L1-dcache-prefetch-misses                                     (37.17%)

       2.187177749 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 18, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 35.29% complete, ETA 00:02:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 354097893.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  354097893.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,92,65,90,587      L1-dcache-loads                                               (35.78%)
    1,90,78,75,019      L1-dcache-loads                                               (35.38%)
       6,25,11,829      L1-dcache-load-misses     #    3.26% of all L1-dcache hits    (23.82%)
       2,22,36,440      LLC-loads                                                     (21.78%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,29,50,755      L1-icache-load-misses                                         (29.38%)
    1,76,86,18,487      dTLB-loads                                                    (22.48%)
         61,23,472      dTLB-load-misses          #    0.35% of all dTLB cache hits   (25.76%)
         29,11,019      iTLB-loads                                                    (19.80%)
          3,33,982      iTLB-load-misses          #   11.47% of all iTLB cache hits   (29.33%)
   <not supported>      L1-dcache-prefetches                                        
       1,81,68,135      L1-dcache-prefetch-misses                                     (37.57%)

       2.032775174 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 18, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 36.27% complete, ETA 00:02:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 171519259.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  171519259.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,04,72,68,833      L1-dcache-loads                                               (37.80%)
    1,02,39,47,406      L1-dcache-loads                                               (37.92%)
       5,19,84,407      L1-dcache-load-misses     #    5.02% of all L1-dcache hits    (21.55%)
       2,68,86,217      LLC-loads                                                     (20.27%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         40,38,548      L1-icache-load-misses                                         (30.67%)
    1,06,29,71,103      dTLB-loads                                                    (29.34%)
         86,78,252      dTLB-load-misses          #    0.82% of all dTLB cache hits   (19.73%)
         11,53,255      iTLB-loads                                                    (19.33%)
          1,72,147      iTLB-load-misses          #   14.93% of all iTLB cache hits   (28.38%)
   <not supported>      L1-dcache-prefetches                                        
       1,52,88,743      L1-dcache-prefetch-misses                                     (37.50%)

       1.994831465 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 19, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 37.25% complete, ETA 00:02:27
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 374817781.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  374817781.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,77,91,23,984      L1-dcache-loads                                               (38.02%)
    1,82,64,41,926      L1-dcache-loads                                               (38.01%)
       5,30,63,457      L1-dcache-load-misses     #    2.94% of all L1-dcache hits    (22.53%)
       1,97,51,580      LLC-loads                                                     (21.64%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,19,27,220      L1-icache-load-misses                                         (30.48%)
    1,77,64,67,713      dTLB-loads                                                    (29.23%)
         47,15,360      dTLB-load-misses          #    0.27% of all dTLB cache hits   (21.67%)
         27,71,924      iTLB-loads                                                    (21.79%)
          4,69,252      iTLB-load-misses          #   16.93% of all iTLB cache hits   (29.80%)
   <not supported>      L1-dcache-prefetches                                        
       1,68,47,050      L1-dcache-prefetch-misses                                     (37.16%)

       2.074930929 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 19, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 38.24% complete, ETA 00:02:25
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 167403425.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  167403425.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,26,66,58,408      L1-dcache-loads                                               (38.44%)
    1,26,34,70,449      L1-dcache-loads                                               (38.23%)
       5,39,04,957      L1-dcache-load-misses     #    4.26% of all L1-dcache hits    (22.19%)
       2,73,65,953      LLC-loads                                                     (21.88%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         45,63,528      L1-icache-load-misses                                         (31.50%)
    1,29,35,74,991      dTLB-loads                                                    (27.69%)
         94,09,758      dTLB-load-misses          #    0.73% of all dTLB cache hits   (19.24%)
         14,34,292      iTLB-loads                                                    (20.01%)
          1,10,013      iTLB-load-misses          #    7.67% of all iTLB cache hits   (28.21%)
   <not supported>      L1-dcache-prefetches                                        
       1,79,18,563      L1-dcache-prefetch-misses                                     (37.45%)

       2.013632771 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 20, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 39.22% complete, ETA 00:02:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 348427689.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  348427689.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,74,93,20,787      L1-dcache-loads                                               (35.75%)
    1,70,03,19,943      L1-dcache-loads                                               (28.65%)
       5,75,09,836      L1-dcache-load-misses     #    3.33% of all L1-dcache hits    (24.75%)
       2,12,86,786      LLC-loads                                                     (29.49%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         99,46,778      L1-icache-load-misses                                         (31.07%)
    1,74,15,12,625      dTLB-loads                                                    (22.30%)
         61,16,266      dTLB-load-misses          #    0.35% of all dTLB cache hits   (26.92%)
         32,24,413      iTLB-loads                                                    (19.49%)
          3,80,131      iTLB-load-misses          #   11.79% of all iTLB cache hits   (27.83%)
   <not supported>      L1-dcache-prefetches                                        
       1,75,36,610      L1-dcache-prefetch-misses                                     (36.60%)

       2.000263771 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 20, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 40.20% complete, ETA 00:02:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 170724746.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  170724746.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,05,41,19,267      L1-dcache-loads                                               (37.94%)
    1,03,25,44,511      L1-dcache-loads                                               (38.23%)
       5,14,79,701      L1-dcache-load-misses     #    4.93% of all L1-dcache hits    (21.37%)
       2,58,43,167      LLC-loads                                                     (21.06%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         42,43,706      L1-icache-load-misses                                         (31.20%)
    1,07,57,74,036      dTLB-loads                                                    (29.06%)
         88,15,557      dTLB-load-misses          #    0.82% of all dTLB cache hits   (19.27%)
         10,50,879      iTLB-loads                                                    (18.79%)
          1,51,753      iTLB-load-misses          #   14.44% of all iTLB cache hits   (28.04%)
   <not supported>      L1-dcache-prefetches                                        
       1,54,83,659      L1-dcache-prefetch-misses                                     (37.29%)

       1.994481360 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 21, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 41.18% complete, ETA 00:02:17
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 308476835.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  308476835.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,00,14,19,811      L1-dcache-loads                                               (38.12%)
    1,97,17,09,493      L1-dcache-loads                                               (37.17%)
       5,93,71,755      L1-dcache-load-misses     #    2.99% of all L1-dcache hits    (21.00%)
       2,30,43,681      LLC-loads                                                     (20.61%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,19,03,115      L1-icache-load-misses                                         (29.93%)
    1,97,84,01,489      dTLB-loads                                                    (29.02%)
         53,03,664      dTLB-load-misses          #    0.27% of all dTLB cache hits   (22.37%)
         29,33,378      iTLB-loads                                                    (22.67%)
          4,04,733      iTLB-load-misses          #   13.80% of all iTLB cache hits   (30.81%)
   <not supported>      L1-dcache-prefetches                                        
       2,17,84,124      L1-dcache-prefetch-misses                                     (38.02%)

       2.167189558 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 21, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 42.16% complete, ETA 00:02:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 175329804.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  175329804.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,25,12,04,074      L1-dcache-loads                                               (34.56%)
    1,23,55,22,797      L1-dcache-loads                                               (34.61%)
       5,69,71,591      L1-dcache-load-misses     #    4.58% of all L1-dcache hits    (21.61%)
       2,84,18,835      LLC-loads                                                     (20.93%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         64,77,540      L1-icache-load-misses                                         (30.29%)
    1,25,19,54,641      dTLB-loads                                                    (27.99%)
       1,00,33,907      dTLB-load-misses          #    0.80% of all dTLB cache hits   (20.60%)
         14,39,217      iTLB-loads                                                    (18.95%)
          2,10,316      iTLB-load-misses          #   14.61% of all iTLB cache hits   (28.32%)
   <not supported>      L1-dcache-prefetches                                        
       1,86,04,380      L1-dcache-prefetch-misses                                     (33.68%)

       2.017016771 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 22, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 43.14% complete, ETA 00:02:13
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 305344774.750 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  305344774.750 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,01,46,33,108      L1-dcache-loads                                               (36.99%)
    1,98,93,97,539      L1-dcache-loads                                               (36.99%)
       6,42,56,132      L1-dcache-load-misses     #    3.21% of all L1-dcache hits    (23.31%)
       2,35,37,388      LLC-loads                                                     (20.06%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         82,75,249      L1-icache-load-misses                                         (29.87%)
    2,07,07,54,907      dTLB-loads                                                    (24.75%)
         64,37,160      dTLB-load-misses          #    0.31% of all dTLB cache hits   (27.91%)
         37,19,592      iTLB-loads                                                    (19.07%)
          3,35,496      iTLB-load-misses          #    9.02% of all iTLB cache hits   (28.20%)
   <not supported>      L1-dcache-prefetches                                        
       1,98,98,804      L1-dcache-prefetch-misses                                     (37.69%)

       2.208571847 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 22, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 44.12% complete, ETA 00:02:11
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 169033091.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  169033091.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,00,45,10,814      L1-dcache-loads                                               (29.94%)
      98,10,46,105      L1-dcache-loads                                               (24.88%)
       5,01,90,854      L1-dcache-load-misses     #    5.06% of all L1-dcache hits    (28.09%)
       2,72,84,140      LLC-loads                                                     (27.92%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         34,66,430      L1-icache-load-misses                                         (37.07%)
      99,57,78,001      dTLB-loads                                                    (21.08%)
         97,92,701      dTLB-load-misses          #    0.98% of all dTLB cache hits   (26.22%)
         11,44,077      iTLB-loads                                                    (18.54%)
            97,557      iTLB-load-misses          #    8.53% of all iTLB cache hits   (26.98%)
   <not supported>      L1-dcache-prefetches                                        
       1,71,17,210      L1-dcache-prefetch-misses                                     (35.79%)

       1.950078823 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 23, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 45.10% complete, ETA 00:02:08
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 298682008.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  298682008.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,06,55,98,256      L1-dcache-loads                                               (38.97%)
    2,04,46,08,559      L1-dcache-loads                                               (38.52%)
       6,01,67,344      L1-dcache-load-misses     #    2.93% of all L1-dcache hits    (24.59%)
       2,35,50,041      LLC-loads                                                     (20.94%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         65,71,490      L1-icache-load-misses                                         (29.97%)
    2,06,27,98,029      dTLB-loads                                                    (31.46%)
         55,18,638      dTLB-load-misses          #    0.27% of all dTLB cache hits   (19.41%)
         34,57,638      iTLB-loads                                                    (19.72%)
          3,58,916      iTLB-load-misses          #   10.38% of all iTLB cache hits   (28.65%)
   <not supported>      L1-dcache-prefetches                                        
       2,19,89,118      L1-dcache-prefetch-misses                                     (37.25%)

       2.199574046 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 23, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 46.08% complete, ETA 00:02:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 163999596.286 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  163999596.286 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,11,44,33,141      L1-dcache-loads                                               (32.59%)
    1,12,51,07,600      L1-dcache-loads                                               (27.00%)
       5,64,85,651      L1-dcache-load-misses     #    5.04% of all L1-dcache hits    (28.52%)
       3,11,28,457      LLC-loads                                                     (28.08%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         21,53,802      L1-icache-load-misses                                         (36.81%)
    1,12,81,94,623      dTLB-loads                                                    (27.92%)
       1,15,52,080      dTLB-load-misses          #    1.02% of all dTLB cache hits   (18.91%)
         13,27,275      iTLB-loads                                                    (18.82%)
            98,457      iTLB-load-misses          #    7.42% of all iTLB cache hits   (28.09%)
   <not supported>      L1-dcache-prefetches                                        
       1,88,10,064      L1-dcache-prefetch-misses                                     (37.30%)

       2.078052440 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 24, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 47.06% complete, ETA 00:02:04
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 298042768.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  298042768.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,33,05,04,085      L1-dcache-loads                                               (35.96%)
    2,35,77,89,996      L1-dcache-loads                                               (33.82%)
       7,25,25,433      L1-dcache-load-misses     #    3.09% of all L1-dcache hits    (21.64%)
       2,59,02,817      LLC-loads                                                     (22.11%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,59,90,804      L1-icache-load-misses                                         (29.96%)
    2,26,92,87,906      dTLB-loads                                                    (27.66%)
         65,96,735      dTLB-load-misses          #    0.29% of all dTLB cache hits   (21.40%)
         36,94,264      iTLB-loads                                                    (19.71%)
          5,02,581      iTLB-load-misses          #   13.60% of all iTLB cache hits   (28.75%)
   <not supported>      L1-dcache-prefetches                                        
       2,33,38,375      L1-dcache-prefetch-misses                                     (37.30%)

       2.322838324 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 24, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 48.04% complete, ETA 00:02:02
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 180993757.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  180993757.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,23,03,13,887      L1-dcache-loads                                               (38.45%)
    1,19,09,65,819      L1-dcache-loads                                               (38.51%)
       5,72,24,637      L1-dcache-load-misses     #    4.73% of all L1-dcache hits    (21.32%)
       2,78,84,802      LLC-loads                                                     (21.25%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         45,31,172      L1-icache-load-misses                                         (31.06%)
    1,27,88,70,101      dTLB-loads                                                    (28.61%)
         90,44,929      dTLB-load-misses          #    0.71% of all dTLB cache hits   (19.11%)
         15,62,919      iTLB-loads                                                    (18.77%)
          2,60,750      iTLB-load-misses          #   16.68% of all iTLB cache hits   (27.82%)
   <not supported>      L1-dcache-prefetches                                        
       1,65,85,386      L1-dcache-prefetch-misses                                     (36.83%)

       2.043905805 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 25, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 49.02% complete, ETA 00:01:59
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 348344051.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  348344051.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,72,18,34,328      L1-dcache-loads                                               (38.02%)
    1,72,51,53,804      L1-dcache-loads                                               (37.01%)
       5,80,64,571      L1-dcache-load-misses     #    3.37% of all L1-dcache hits    (20.63%)
       2,09,17,065      LLC-loads                                                     (20.21%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         97,66,451      L1-icache-load-misses                                         (30.20%)
    1,78,38,92,404      dTLB-loads                                                    (30.06%)
         48,43,768      dTLB-load-misses          #    0.27% of all dTLB cache hits   (22.15%)
         25,52,691      iTLB-loads                                                    (22.55%)
          4,11,711      iTLB-load-misses          #   16.13% of all iTLB cache hits   (30.98%)
   <not supported>      L1-dcache-prefetches                                        
       1,65,57,719      L1-dcache-prefetch-misses                                     (38.26%)

       1.979913893 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 25, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 50.00% complete, ETA 00:01:57
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 149714414.286 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  149714414.286 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,24,44,73,120      L1-dcache-loads                                               (36.94%)
    1,24,49,61,307      L1-dcache-loads                                               (36.27%)
       6,16,94,369      L1-dcache-load-misses     #    4.96% of all L1-dcache hits    (21.66%)
       2,16,73,552      LLC-loads                                                     (21.20%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         33,05,859      L1-icache-load-misses                                         (30.50%)
    1,26,48,23,159      dTLB-loads                                                    (31.04%)
         82,89,080      dTLB-load-misses          #    0.66% of all dTLB cache hits   (24.18%)
          2,94,861      iTLB-loads                                                    (23.93%)
          1,38,165      iTLB-load-misses          #   46.86% of all iTLB cache hits   (30.83%)
   <not supported>      L1-dcache-prefetches                                        
       2,78,23,110      L1-dcache-prefetch-misses                                     (35.96%)

       2.019366181 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 26, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 50.98% complete, ETA 00:01:54
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 306184290.750 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  306184290.750 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,44,06,55,712      L1-dcache-loads                                               (35.67%)
    2,45,14,59,760      L1-dcache-loads                                               (34.42%)
       7,31,28,557      L1-dcache-load-misses     #    2.99% of all L1-dcache hits    (21.42%)
       2,85,51,594      LLC-loads                                                     (23.05%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,40,71,376      L1-icache-load-misses                                         (31.61%)
    2,36,32,65,162      dTLB-loads                                                    (25.99%)
         64,21,955      dTLB-load-misses          #    0.27% of all dTLB cache hits   (22.40%)
         37,42,660      iTLB-loads                                                    (19.87%)
          4,32,858      iTLB-load-misses          #   11.57% of all iTLB cache hits   (27.80%)
   <not supported>      L1-dcache-prefetches                                        
       2,48,99,143      L1-dcache-prefetch-misses                                     (36.64%)

       2.325713936 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 26, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 51.96% complete, ETA 00:01:52
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 174254766.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  174254766.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,28,17,13,890      L1-dcache-loads                                               (36.80%)
    1,25,28,32,552      L1-dcache-loads                                               (29.52%)
       5,73,60,318      L1-dcache-load-misses     #    4.53% of all L1-dcache hits    (24.04%)
       3,03,80,473      LLC-loads                                                     (29.16%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         94,12,987      L1-icache-load-misses                                         (30.98%)
    1,24,51,58,887      dTLB-loads                                                    (20.20%)
       1,09,63,291      dTLB-load-misses          #    0.88% of all dTLB cache hits   (26.12%)
         14,76,760      iTLB-loads                                                    (19.39%)
          4,08,820      iTLB-load-misses          #   27.68% of all iTLB cache hits   (27.77%)
   <not supported>      L1-dcache-prefetches                                        
       1,94,89,509      L1-dcache-prefetch-misses                                     (36.72%)

       2.046869511 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 27, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 52.94% complete, ETA 00:01:50
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 417059674.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  417059674.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,84,40,77,384      L1-dcache-loads                                               (33.80%)
    1,82,49,82,202      L1-dcache-loads                                               (29.40%)
       6,26,43,290      L1-dcache-load-misses     #    3.41% of all L1-dcache hits    (25.64%)
       3,04,08,355      LLC-loads                                                     (26.00%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,03,58,929      L1-icache-load-misses                                         (35.47%)
    1,85,03,16,521      dTLB-loads                                                    (27.24%)
         58,12,363      dTLB-load-misses          #    0.31% of all dTLB cache hits   (19.57%)
         28,80,228      iTLB-loads                                                    (18.76%)
          3,64,416      iTLB-load-misses          #   12.65% of all iTLB cache hits   (27.95%)
   <not supported>      L1-dcache-prefetches                                        
       1,59,34,393      L1-dcache-prefetch-misses                                     (37.01%)

       2.302387861 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 27, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 53.92% complete, ETA 00:01:48
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 138804283.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  138804283.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,26,17,99,535      L1-dcache-loads                                               (30.71%)
    1,24,16,73,644      L1-dcache-loads                                               (24.10%)
       6,52,80,778      L1-dcache-load-misses     #    5.22% of all L1-dcache hits    (21.66%)
       2,37,59,986      LLC-loads                                                     (27.49%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         38,12,089      L1-icache-load-misses                                         (30.71%)
    1,27,09,24,901      dTLB-loads                                                    (29.35%)
         84,37,250      dTLB-load-misses          #    0.66% of all dTLB cache hits   (19.85%)
          2,50,219      iTLB-loads                                                    (19.10%)
            78,974      iTLB-load-misses          #   31.56% of all iTLB cache hits   (28.19%)
   <not supported>      L1-dcache-prefetches                                        
       3,01,86,674      L1-dcache-prefetch-misses                                     (30.79%)

       2.075391154 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 28, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 54.90% complete, ETA 00:01:46
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 344174327.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  344174327.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,84,10,32,149      L1-dcache-loads                                               (35.18%)
    1,86,05,82,589      L1-dcache-loads                                               (31.40%)
       5,60,81,402      L1-dcache-load-misses     #    3.03% of all L1-dcache hits    (22.13%)
       2,20,72,778      LLC-loads                                                     (23.70%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,19,67,041      L1-icache-load-misses                                         (29.91%)
    1,82,66,26,792      dTLB-loads                                                    (25.77%)
         57,96,459      dTLB-load-misses          #    0.32% of all dTLB cache hits   (20.73%)
         31,28,053      iTLB-loads                                                    (18.97%)
          5,05,552      iTLB-load-misses          #   16.16% of all iTLB cache hits   (27.88%)
   <not supported>      L1-dcache-prefetches                                        
       1,66,56,241      L1-dcache-prefetch-misses                                     (35.56%)

       2.036270922 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 28, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 55.88% complete, ETA 00:01:43
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 174135095.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  174135095.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,15,71,64,384      L1-dcache-loads                                               (38.17%)
    1,12,03,02,078      L1-dcache-loads                                               (38.17%)
       5,15,61,983      L1-dcache-load-misses     #    4.53% of all L1-dcache hits    (22.27%)
       2,62,16,788      LLC-loads                                                     (21.56%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         63,43,693      L1-icache-load-misses                                         (31.14%)
    1,13,39,23,433      dTLB-loads                                                    (29.26%)
         89,50,214      dTLB-load-misses          #    0.79% of all dTLB cache hits   (18.79%)
         11,06,700      iTLB-loads                                                    (18.73%)
          1,20,197      iTLB-load-misses          #   10.86% of all iTLB cache hits   (27.82%)
   <not supported>      L1-dcache-prefetches                                        
       1,64,91,384      L1-dcache-prefetch-misses                                     (36.51%)

       2.010111119 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 29, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 56.86% complete, ETA 00:01:41
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 302290829.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  302290829.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,93,64,90,254      L1-dcache-loads                                               (37.97%)
    1,94,57,05,447      L1-dcache-loads                                               (38.18%)
       5,88,29,527      L1-dcache-load-misses     #    3.03% of all L1-dcache hits    (21.82%)
       2,29,33,916      LLC-loads                                                     (20.53%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         94,09,115      L1-icache-load-misses                                         (30.56%)
    1,97,44,63,084      dTLB-loads                                                    (23.29%)
         71,37,620      dTLB-load-misses          #    0.36% of all dTLB cache hits   (24.16%)
         45,83,470      iTLB-loads                                                    (19.61%)
          3,42,678      iTLB-load-misses          #    7.48% of all iTLB cache hits   (28.46%)
   <not supported>      L1-dcache-prefetches                                        
       2,13,60,560      L1-dcache-prefetch-misses                                     (36.90%)

       2.156720552 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 29, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 57.84% complete, ETA 00:01:39
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 150425587.857 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  150425587.857 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,09,17,24,805      L1-dcache-loads                                               (36.84%)
    1,08,39,96,375      L1-dcache-loads                                               (37.96%)
       5,43,86,146      L1-dcache-load-misses     #    5.00% of all L1-dcache hits    (23.25%)
       2,06,48,651      LLC-loads                                                     (21.03%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         40,60,334      L1-icache-load-misses                                         (29.66%)
    1,07,01,95,788      dTLB-loads                                                    (26.40%)
         73,55,723      dTLB-load-misses          #    0.69% of all dTLB cache hits   (19.73%)
          5,24,106      iTLB-loads                                                    (19.73%)
          1,00,721      iTLB-load-misses          #   19.22% of all iTLB cache hits   (27.48%)
   <not supported>      L1-dcache-prefetches                                        
       2,60,35,942      L1-dcache-prefetch-misses                                     (36.58%)

       1.980968295 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 30, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 58.82% complete, ETA 00:01:36
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 335445471.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  335445471.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,81,53,38,205      L1-dcache-loads                                               (34.76%)
    1,84,47,39,253      L1-dcache-loads                                               (33.18%)
       5,82,45,500      L1-dcache-load-misses     #    3.18% of all L1-dcache hits    (22.93%)
       2,19,08,948      LLC-loads                                                     (23.15%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,11,96,644      L1-icache-load-misses                                         (33.06%)
    1,71,29,30,739      dTLB-loads                                                    (20.67%)
         54,73,381      dTLB-load-misses          #    0.32% of all dTLB cache hits   (27.59%)
         28,00,047      iTLB-loads                                                    (19.45%)
          4,41,751      iTLB-load-misses          #   15.78% of all iTLB cache hits   (29.00%)
   <not supported>      L1-dcache-prefetches                                        
       1,65,21,352      L1-dcache-prefetch-misses                                     (37.85%)

       2.025152065 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 30, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 59.80% complete, ETA 00:01:34
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 168505958.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  168505958.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,34,99,82,887      L1-dcache-loads                                               (24.74%)
    1,27,57,27,881      L1-dcache-loads                                               (25.64%)
       5,79,63,628      L1-dcache-load-misses     #    4.42% of all L1-dcache hits    (22.45%)
       2,94,59,236      LLC-loads                                                     (22.29%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         72,17,014      L1-icache-load-misses                                         (29.98%)
    1,26,65,96,531      dTLB-loads                                                    (27.02%)
       1,09,54,168      dTLB-load-misses          #    0.86% of all dTLB cache hits   (24.58%)
         15,64,484      iTLB-loads                                                    (24.99%)
          1,64,614      iTLB-load-misses          #   10.52% of all iTLB cache hits   (33.48%)
   <not supported>      L1-dcache-prefetches                                        
       1,94,22,407      L1-dcache-prefetch-misses                                     (36.26%)

       2.055107916 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 31, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 60.78% complete, ETA 00:01:31
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 308320612.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  308320612.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,90,03,68,382      L1-dcache-loads                                               (34.87%)
    1,87,11,43,220      L1-dcache-loads                                               (34.02%)
       5,92,50,157      L1-dcache-load-misses     #    3.14% of all L1-dcache hits    (23.35%)
       2,33,18,660      LLC-loads                                                     (22.46%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         78,24,487      L1-icache-load-misses                                         (31.90%)
    1,92,41,75,586      dTLB-loads                                                    (30.02%)
         57,74,766      dTLB-load-misses          #    0.30% of all dTLB cache hits   (22.06%)
         33,22,370      iTLB-loads                                                    (21.76%)
          2,87,217      iTLB-load-misses          #    8.64% of all iTLB cache hits   (29.64%)
   <not supported>      L1-dcache-prefetches                                        
       1,95,06,599      L1-dcache-prefetch-misses                                     (36.11%)

       2.159654558 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 31, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 61.76% complete, ETA 00:01:29
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 175271403.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  175271403.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,15,32,00,326      L1-dcache-loads                                               (37.08%)
    1,12,24,08,224      L1-dcache-loads                                               (37.64%)
       5,21,04,398      L1-dcache-load-misses     #    4.58% of all L1-dcache hits    (22.62%)
       2,63,00,852      LLC-loads                                                     (20.92%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         57,31,774      L1-icache-load-misses                                         (30.91%)
    1,15,00,28,131      dTLB-loads                                                    (28.58%)
         89,13,390      dTLB-load-misses          #    0.78% of all dTLB cache hits   (19.33%)
         10,33,331      iTLB-loads                                                    (19.22%)
          1,46,871      iTLB-load-misses          #   14.21% of all iTLB cache hits   (28.80%)
   <not supported>      L1-dcache-prefetches                                        
       1,53,74,044      L1-dcache-prefetch-misses                                     (37.32%)

       1.990573800 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 32, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 62.75% complete, ETA 00:01:27
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 305171722.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  305171722.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,02,68,43,251      L1-dcache-loads                                               (37.66%)
    2,01,36,31,132      L1-dcache-loads                                               (35.23%)
       5,92,16,362      L1-dcache-load-misses     #    2.93% of all L1-dcache hits    (21.23%)
       2,36,07,915      LLC-loads                                                     (21.94%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         98,66,405      L1-icache-load-misses                                         (30.24%)
    1,98,73,14,146      dTLB-loads                                                    (26.86%)
         58,18,452      dTLB-load-misses          #    0.29% of all dTLB cache hits   (21.52%)
         31,59,289      iTLB-loads                                                    (20.11%)
          3,23,448      iTLB-load-misses          #   10.24% of all iTLB cache hits   (29.29%)
   <not supported>      L1-dcache-prefetches                                        
       2,02,27,990      L1-dcache-prefetch-misses                                     (37.70%)

       2.186132191 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 32, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 63.73% complete, ETA 00:01:25
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 178146763.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  178146763.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,43,13,79,130      L1-dcache-loads                                               (33.15%)
    1,41,50,57,634      L1-dcache-loads                                               (33.71%)
       6,32,98,870      L1-dcache-load-misses     #    4.45% of all L1-dcache hits    (25.60%)
       2,87,64,238      LLC-loads                                                     (24.33%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         87,18,689      L1-icache-load-misses                                         (29.22%)
    1,43,05,48,577      dTLB-loads                                                    (25.17%)
         97,75,328      dTLB-load-misses          #    0.68% of all dTLB cache hits   (19.60%)
         15,97,919      iTLB-loads                                                    (18.98%)
          4,67,350      iTLB-load-misses          #   29.25% of all iTLB cache hits   (26.23%)
   <not supported>      L1-dcache-prefetches                                        
       2,02,35,797      L1-dcache-prefetch-misses                                     (33.51%)

       2.186009434 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 33, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 64.71% complete, ETA 00:01:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 365381692.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  365381692.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,63,30,32,583      L1-dcache-loads                                               (31.67%)
    1,64,72,36,203      L1-dcache-loads                                               (30.55%)
       5,46,03,902      L1-dcache-load-misses     #    3.33% of all L1-dcache hits    (25.37%)
       2,10,95,651      LLC-loads                                                     (25.67%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,15,40,202      L1-icache-load-misses                                         (31.88%)
    1,59,02,00,510      dTLB-loads                                                    (23.34%)
         59,30,715      dTLB-load-misses          #    0.37% of all dTLB cache hits   (28.52%)
         32,55,539      iTLB-loads                                                    (20.74%)
          3,22,953      iTLB-load-misses          #    9.92% of all iTLB cache hits   (29.34%)
   <not supported>      L1-dcache-prefetches                                        
       1,59,33,663      L1-dcache-prefetch-misses                                     (36.92%)

       2.055202970 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 33, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 65.69% complete, ETA 00:01:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 184416868.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  184416868.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,27,35,30,851      L1-dcache-loads                                               (38.36%)
    1,28,24,95,917      L1-dcache-loads                                               (37.55%)
       5,75,13,494      L1-dcache-load-misses     #    4.50% of all L1-dcache hits    (21.38%)
       2,80,79,578      LLC-loads                                                     (20.62%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         54,99,181      L1-icache-load-misses                                         (30.41%)
    1,34,73,82,523      dTLB-loads                                                    (28.78%)
         91,46,951      dTLB-load-misses          #    0.68% of all dTLB cache hits   (19.55%)
         14,22,141      iTLB-loads                                                    (19.43%)
          3,38,424      iTLB-load-misses          #   23.80% of all iTLB cache hits   (28.93%)
   <not supported>      L1-dcache-prefetches                                        
       1,68,65,212      L1-dcache-prefetch-misses                                     (38.09%)

       2.069031078 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 34, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 66.67% complete, ETA 00:01:18
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 300402284.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  300402284.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,12,49,22,383      L1-dcache-loads                                               (38.68%)
    2,10,12,31,566      L1-dcache-loads                                               (38.07%)
       6,08,63,749      L1-dcache-load-misses     #    2.88% of all L1-dcache hits    (20.49%)
       2,32,56,669      LLC-loads                                                     (20.31%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,25,39,374      L1-icache-load-misses                                         (29.98%)
    2,11,90,38,725      dTLB-loads                                                    (26.67%)
         60,97,697      dTLB-load-misses          #    0.29% of all dTLB cache hits   (21.32%)
         35,45,627      iTLB-loads                                                    (19.58%)
          3,64,033      iTLB-load-misses          #   10.27% of all iTLB cache hits   (28.92%)
   <not supported>      L1-dcache-prefetches                                        
       2,22,06,236      L1-dcache-prefetch-misses                                     (38.34%)

       2.212703939 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 34, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 67.65% complete, ETA 00:01:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 181085168.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  181085168.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,21,32,05,105      L1-dcache-loads                                               (31.58%)
    1,20,46,13,759      L1-dcache-loads                                               (32.58%)
       5,36,85,589      L1-dcache-load-misses     #    4.44% of all L1-dcache hits    (21.11%)
       2,65,77,403      LLC-loads                                                     (20.71%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         66,12,016      L1-icache-load-misses                                         (30.97%)
    1,19,44,34,402      dTLB-loads                                                    (29.74%)
         82,31,077      dTLB-load-misses          #    0.69% of all dTLB cache hits   (22.12%)
         12,91,571      iTLB-loads                                                    (21.36%)
          2,60,521      iTLB-load-misses          #   20.17% of all iTLB cache hits   (29.19%)
   <not supported>      L1-dcache-prefetches                                        
       1,62,74,060      L1-dcache-prefetch-misses                                     (32.70%)

       2.036614781 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 35, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 68.63% complete, ETA 00:01:13
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 341228389.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  341228389.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,57,87,98,159      L1-dcache-loads                                               (34.44%)
    1,57,02,16,703      L1-dcache-loads                                               (33.56%)
       5,65,03,473      L1-dcache-load-misses     #    3.59% of all L1-dcache hits    (23.94%)
       2,15,68,627      LLC-loads                                                     (24.21%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         92,29,204      L1-icache-load-misses                                         (32.77%)
    1,63,89,36,328      dTLB-loads                                                    (32.03%)
         63,61,345      dTLB-load-misses          #    0.39% of all dTLB cache hits   (27.23%)
         31,02,147      iTLB-loads                                                    (27.22%)
          3,24,128      iTLB-load-misses          #   10.45% of all iTLB cache hits   (32.63%)
   <not supported>      L1-dcache-prefetches                                        
       2,09,44,187      L1-dcache-prefetch-misses                                     (37.63%)

       1.953569304 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 35, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 69.61% complete, ETA 00:01:11
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 173060375.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  173060375.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,10,99,03,765      L1-dcache-loads                                               (36.83%)
    1,07,88,88,872      L1-dcache-loads                                               (38.01%)
       5,34,99,066      L1-dcache-load-misses     #    4.89% of all L1-dcache hits    (23.41%)
       2,74,07,785      LLC-loads                                                     (22.36%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         53,80,804      L1-icache-load-misses                                         (31.23%)
    1,15,28,34,266      dTLB-loads                                                    (28.09%)
         91,79,660      dTLB-load-misses          #    0.80% of all dTLB cache hits   (18.88%)
         10,25,737      iTLB-loads                                                    (18.81%)
          1,47,977      iTLB-load-misses          #   14.43% of all iTLB cache hits   (27.88%)
   <not supported>      L1-dcache-prefetches                                        
       1,59,24,016      L1-dcache-prefetch-misses                                     (36.98%)

       2.005726739 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 36, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 70.59% complete, ETA 00:01:08
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 333724264.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  333724264.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,60,06,61,525      L1-dcache-loads                                               (34.72%)
    1,57,91,28,511      L1-dcache-loads                                               (37.51%)
       4,95,25,500      L1-dcache-load-misses     #    3.12% of all L1-dcache hits    (22.48%)
       2,07,49,130      LLC-loads                                                     (22.27%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         74,83,859      L1-icache-load-misses                                         (29.76%)
    1,67,90,10,256      dTLB-loads                                                    (25.59%)
         50,45,795      dTLB-load-misses          #    0.30% of all dTLB cache hits   (19.64%)
         24,69,207      iTLB-loads                                                    (18.81%)
          2,29,119      iTLB-load-misses          #    9.28% of all iTLB cache hits   (27.62%)
   <not supported>      L1-dcache-prefetches                                        
       1,50,03,366      L1-dcache-prefetch-misses                                     (35.46%)

       1.944826284 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 36, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 71.57% complete, ETA 00:01:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 171324727.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  171324727.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,27,60,69,819      L1-dcache-loads                                               (36.05%)
    1,23,87,02,769      L1-dcache-loads                                               (37.36%)
       5,31,87,622      L1-dcache-load-misses     #    4.23% of all L1-dcache hits    (23.04%)
       2,80,02,715      LLC-loads                                                     (22.17%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         76,64,774      L1-icache-load-misses                                         (30.25%)
    1,20,35,77,139      dTLB-loads                                                    (26.28%)
         94,40,922      dTLB-load-misses          #    0.78% of all dTLB cache hits   (19.96%)
         10,55,366      iTLB-loads                                                    (18.27%)
            76,901      iTLB-load-misses          #    7.29% of all iTLB cache hits   (27.13%)
   <not supported>      L1-dcache-prefetches                                        
       1,78,85,146      L1-dcache-prefetch-misses                                     (34.94%)

       2.051539556 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 37, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 72.55% complete, ETA 00:01:04
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 296880536.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  296880536.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,20,91,19,378      L1-dcache-loads                                               (37.00%)
    2,14,70,01,500      L1-dcache-loads                                               (36.17%)
       6,57,59,783      L1-dcache-load-misses     #    3.02% of all L1-dcache hits    (21.90%)
       2,66,81,702      LLC-loads                                                     (22.15%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,23,00,127      L1-icache-load-misses                                         (30.19%)
    2,23,93,81,213      dTLB-loads                                                    (26.68%)
         62,40,401      dTLB-load-misses          #    0.28% of all dTLB cache hits   (20.67%)
         39,64,408      iTLB-loads                                                    (19.71%)
          2,91,297      iTLB-load-misses          #    7.35% of all iTLB cache hits   (27.81%)
   <not supported>      L1-dcache-prefetches                                        
       2,33,95,756      L1-dcache-prefetch-misses                                     (36.49%)

       2.235956043 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 37, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 73.53% complete, ETA 00:01:02
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 172941318.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  172941318.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,09,92,41,715      L1-dcache-loads                                               (34.51%)
    1,11,42,37,766      L1-dcache-loads                                               (31.65%)
       5,52,58,849      L1-dcache-load-misses     #    4.99% of all L1-dcache hits    (25.72%)
       2,80,59,802      LLC-loads                                                     (25.19%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         51,12,039      L1-icache-load-misses                                         (31.20%)
    1,13,49,36,823      dTLB-loads                                                    (20.35%)
       1,10,08,414      dTLB-load-misses          #    0.97% of all dTLB cache hits   (26.55%)
         12,52,485      iTLB-loads                                                    (19.23%)
          1,75,749      iTLB-load-misses          #   14.03% of all iTLB cache hits   (27.84%)
   <not supported>      L1-dcache-prefetches                                        
       1,77,06,996      L1-dcache-prefetch-misses                                     (36.75%)

       2.005496872 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 38, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 74.51% complete, ETA 00:00:59
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 366893217.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  366893217.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,69,66,11,413      L1-dcache-loads                                               (31.11%)
    1,61,85,13,982      L1-dcache-loads                                               (24.05%)
       6,05,85,791      L1-dcache-load-misses     #    3.66% of all L1-dcache hits    (26.00%)
       2,32,52,497      LLC-loads                                                     (30.84%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,12,78,233      L1-icache-load-misses                                         (36.87%)
    1,69,78,35,682      dTLB-loads                                                    (19.89%)
         62,20,239      dTLB-load-misses          #    0.37% of all dTLB cache hits   (26.55%)
         28,82,550      iTLB-loads                                                    (19.46%)
          3,04,191      iTLB-load-misses          #   10.55% of all iTLB cache hits   (27.52%)
   <not supported>      L1-dcache-prefetches                                        
       2,26,32,502      L1-dcache-prefetch-misses                                     (35.46%)

       2.058531697 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 38, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 75.49% complete, ETA 00:00:57
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 179734825.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  179734825.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,41,49,33,781      L1-dcache-loads                                               (30.21%)
    1,41,96,95,558      L1-dcache-loads                                               (30.44%)
       6,21,45,767      L1-dcache-load-misses     #    4.38% of all L1-dcache hits    (30.93%)
       3,24,38,097      LLC-loads                                                     (26.11%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         87,48,896      L1-icache-load-misses                                         (30.52%)
    1,39,04,45,334      dTLB-loads                                                    (27.27%)
       1,10,16,712      dTLB-load-misses          #    0.79% of all dTLB cache hits   (19.24%)
         16,18,319      iTLB-loads                                                    (18.74%)
          3,22,333      iTLB-load-misses          #   19.92% of all iTLB cache hits   (27.14%)
   <not supported>      L1-dcache-prefetches                                        
       2,03,47,657      L1-dcache-prefetch-misses                                     (35.00%)

       2.099891179 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 39, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 76.47% complete, ETA 00:00:55
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 356464921.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  356464921.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,65,40,58,581      L1-dcache-loads                                               (34.94%)
    1,60,79,82,523      L1-dcache-loads                                               (34.36%)
       5,08,64,562      L1-dcache-load-misses     #    3.12% of all L1-dcache hits    (22.83%)
       1,96,53,861      LLC-loads                                                     (21.89%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,03,40,499      L1-icache-load-misses                                         (31.12%)
    1,66,29,81,793      dTLB-loads                                                    (22.15%)
         65,38,187      dTLB-load-misses          #    0.39% of all dTLB cache hits   (25.41%)
         41,72,556      iTLB-loads                                                    (19.78%)
          2,63,783      iTLB-load-misses          #    6.32% of all iTLB cache hits   (28.56%)
   <not supported>      L1-dcache-prefetches                                        
       1,60,82,985      L1-dcache-prefetch-misses                                     (33.56%)

       2.112471899 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 39, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 77.45% complete, ETA 00:00:52
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 174204274.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  174204274.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,32,59,01,431      L1-dcache-loads                                               (26.03%)
    1,34,86,95,931      L1-dcache-loads                                               (21.53%)
       6,17,12,642      L1-dcache-load-misses     #    4.61% of all L1-dcache hits    (25.54%)
       2,99,69,381      LLC-loads                                                     (25.97%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         74,67,414      L1-icache-load-misses                                         (35.42%)
    1,34,86,05,320      dTLB-loads                                                    (28.44%)
       1,02,70,352      dTLB-load-misses          #    0.76% of all dTLB cache hits   (29.27%)
         14,20,432      iTLB-loads                                                    (25.04%)
          4,10,554      iTLB-load-misses          #   28.90% of all iTLB cache hits   (31.20%)
   <not supported>      L1-dcache-prefetches                                        
       1,75,66,960      L1-dcache-prefetch-misses                                     (33.72%)

       2.137011986 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 40, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 78.43% complete, ETA 00:00:50
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 356577970.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  356577970.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,80,16,18,889      L1-dcache-loads                                               (32.93%)
    1,78,67,36,767      L1-dcache-loads                                               (27.80%)
       6,07,00,021      L1-dcache-load-misses     #    3.38% of all L1-dcache hits    (21.35%)
       2,32,54,614      LLC-loads                                                     (23.15%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,23,33,081      L1-icache-load-misses                                         (32.64%)
    1,72,96,63,643      dTLB-loads                                                    (23.93%)
         51,87,286      dTLB-load-misses          #    0.30% of all dTLB cache hits   (24.29%)
         27,48,332      iTLB-loads                                                    (19.23%)
          4,85,717      iTLB-load-misses          #   17.67% of all iTLB cache hits   (27.84%)
   <not supported>      L1-dcache-prefetches                                        
       2,23,41,389      L1-dcache-prefetch-misses                                     (34.12%)

       2.084824477 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 40, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 79.41% complete, ETA 00:00:48
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 159298798.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  159298798.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,26,99,57,963      L1-dcache-loads                                               (37.84%)
    1,24,98,44,736      L1-dcache-loads                                               (37.35%)
       5,80,25,326      L1-dcache-load-misses     #    4.61% of all L1-dcache hits    (21.77%)
       2,09,97,363      LLC-loads                                                     (21.70%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         60,98,539      L1-icache-load-misses                                         (31.39%)
    1,23,17,82,479      dTLB-loads                                                    (29.20%)
         79,80,432      dTLB-load-misses          #    0.65% of all dTLB cache hits   (19.11%)
          5,38,191      iTLB-loads                                                    (18.94%)
          1,47,799      iTLB-load-misses          #   27.46% of all iTLB cache hits   (28.41%)
   <not supported>      L1-dcache-prefetches                                        
       2,78,39,417      L1-dcache-prefetch-misses                                     (36.77%)

       2.015178090 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 41, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 80.39% complete, ETA 00:00:45
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 301868813.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  301868813.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,13,40,35,022      L1-dcache-loads                                               (38.80%)
    2,10,73,79,437      L1-dcache-loads                                               (38.69%)
       6,63,28,892      L1-dcache-load-misses     #    3.13% of all L1-dcache hits    (21.27%)
       2,52,27,051      LLC-loads                                                     (20.95%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,24,64,631      L1-icache-load-misses                                         (30.21%)
    2,12,55,41,014      dTLB-loads                                                    (20.89%)
         68,39,328      dTLB-load-misses          #    0.32% of all dTLB cache hits   (26.48%)
         33,46,824      iTLB-loads                                                    (19.26%)
          3,98,083      iTLB-load-misses          #   11.89% of all iTLB cache hits   (28.67%)
   <not supported>      L1-dcache-prefetches                                        
       2,31,43,815      L1-dcache-prefetch-misses                                     (37.68%)

       2.254553146 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 41, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 81.37% complete, ETA 00:00:43
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 190675106.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  190675106.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,23,35,19,401      L1-dcache-loads                                               (23.21%)
    1,23,04,02,568      L1-dcache-loads                                               (22.51%)
       5,74,70,883      L1-dcache-load-misses     #    4.66% of all L1-dcache hits    (28.71%)
       3,00,76,117      LLC-loads                                                     (32.89%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         72,04,684      L1-icache-load-misses                                         (34.49%)
    1,16,94,16,361      dTLB-loads                                                    (25.69%)
         90,10,563      dTLB-load-misses          #    0.77% of all dTLB cache hits   (21.53%)
         13,20,798      iTLB-loads                                                    (20.52%)
          2,41,471      iTLB-load-misses          #   18.28% of all iTLB cache hits   (28.35%)
   <not supported>      L1-dcache-prefetches                                        
       1,73,72,977      L1-dcache-prefetch-misses                                     (36.27%)

       2.107596773 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 42, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 82.35% complete, ETA 00:00:41
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 342463492.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  342463492.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,79,22,38,527      L1-dcache-loads                                               (37.73%)
    1,74,52,32,424      L1-dcache-loads                                               (37.26%)
       5,50,37,412      L1-dcache-load-misses     #    3.11% of all L1-dcache hits    (22.41%)
       2,05,83,143      LLC-loads                                                     (20.82%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,01,97,929      L1-icache-load-misses                                         (29.79%)
    1,75,74,87,744      dTLB-loads                                                    (22.96%)
         54,82,407      dTLB-load-misses          #    0.31% of all dTLB cache hits   (24.97%)
         26,61,244      iTLB-loads                                                    (19.96%)
          4,22,292      iTLB-load-misses          #   15.87% of all iTLB cache hits   (29.02%)
   <not supported>      L1-dcache-prefetches                                        
       1,68,78,760      L1-dcache-prefetch-misses                                     (37.56%)

       2.004471566 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 42, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 83.33% complete, ETA 00:00:39
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 187007741.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  187007741.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,28,21,69,865      L1-dcache-loads                                               (30.75%)
    1,23,99,17,947      L1-dcache-loads                                               (22.81%)
       5,83,91,746      L1-dcache-load-misses     #    4.63% of all L1-dcache hits    (24.79%)
       2,98,36,960      LLC-loads                                                     (32.50%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         62,91,940      L1-icache-load-misses                                         (38.66%)
    1,26,06,48,234      dTLB-loads                                                    (29.86%)
         93,84,821      dTLB-load-misses          #    0.74% of all dTLB cache hits   (19.83%)
         15,87,561      iTLB-loads                                                    (19.20%)
          2,34,198      iTLB-load-misses          #   14.75% of all iTLB cache hits   (27.85%)
   <not supported>      L1-dcache-prefetches                                        
       1,63,26,503      L1-dcache-prefetch-misses                                     (36.46%)

       2.075621294 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 43, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 84.31% complete, ETA 00:00:36
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 307074590.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  307074590.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,22,34,78,074      L1-dcache-loads                                               (34.39%)
    2,16,03,68,138      L1-dcache-loads                                               (31.33%)
       6,60,20,685      L1-dcache-load-misses     #    3.01% of all L1-dcache hits    (22.72%)
       2,59,04,507      LLC-loads                                                     (23.51%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,33,34,679      L1-icache-load-misses                                         (32.71%)
    2,16,84,92,885      dTLB-loads                                                    (28.07%)
         66,80,093      dTLB-load-misses          #    0.31% of all dTLB cache hits   (20.90%)
         36,24,752      iTLB-loads                                                    (19.24%)
          3,30,906      iTLB-load-misses          #    9.13% of all iTLB cache hits   (28.00%)
   <not supported>      L1-dcache-prefetches                                        
       2,34,50,272      L1-dcache-prefetch-misses                                     (37.39%)

       2.280071353 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 43, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 85.29% complete, ETA 00:00:34
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 156468341.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  156468341.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,42,78,21,732      L1-dcache-loads                                               (36.22%)
    1,38,15,38,516      L1-dcache-loads                                               (33.84%)
       6,74,09,321      L1-dcache-load-misses     #    4.80% of all L1-dcache hits    (22.56%)
       2,35,61,659      LLC-loads                                                     (24.52%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         58,14,454      L1-icache-load-misses                                         (32.95%)
    1,44,31,98,249      dTLB-loads                                                    (28.55%)
         85,60,955      dTLB-load-misses          #    0.59% of all dTLB cache hits   (18.39%)
          7,50,432      iTLB-loads                                                    (18.43%)
          2,26,887      iTLB-load-misses          #   30.23% of all iTLB cache hits   (26.92%)
   <not supported>      L1-dcache-prefetches                                        
       2,84,76,704      L1-dcache-prefetch-misses                                     (35.52%)

       2.110376814 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 44, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 86.27% complete, ETA 00:00:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 308113738.750 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  308113738.750 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,03,53,86,573      L1-dcache-loads                                               (36.50%)
    2,02,58,00,599      L1-dcache-loads                                               (36.12%)
       5,48,17,035      L1-dcache-load-misses     #    2.70% of all L1-dcache hits    (22.23%)
       2,18,81,574      LLC-loads                                                     (22.61%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         73,72,121      L1-icache-load-misses                                         (30.66%)
    2,07,27,56,112      dTLB-loads                                                    (27.90%)
         51,90,731      dTLB-load-misses          #    0.25% of all dTLB cache hits   (19.23%)
         30,25,758      iTLB-loads                                                    (19.37%)
          3,23,707      iTLB-load-misses          #   10.70% of all iTLB cache hits   (28.50%)
   <not supported>      L1-dcache-prefetches                                        
       2,04,72,832      L1-dcache-prefetch-misses                                     (36.80%)

       2.195132098 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 44, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 87.25% complete, ETA 00:00:29
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 183808376.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  183808376.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,19,19,04,028      L1-dcache-loads                                               (38.85%)
    1,21,17,29,111      L1-dcache-loads                                               (37.96%)
       5,29,03,769      L1-dcache-load-misses     #    4.40% of all L1-dcache hits    (21.17%)
       2,79,90,629      LLC-loads                                                     (24.53%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         53,19,453      L1-icache-load-misses                                         (34.73%)
    1,17,02,87,562      dTLB-loads                                                    (28.68%)
         92,36,438      dTLB-load-misses          #    0.79% of all dTLB cache hits   (19.09%)
         13,82,347      iTLB-loads                                                    (19.24%)
          2,79,444      iTLB-load-misses          #   20.22% of all iTLB cache hits   (28.20%)
   <not supported>      L1-dcache-prefetches                                        
       1,61,93,916      L1-dcache-prefetch-misses                                     (37.34%)

       2.038090318 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 45, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 88.24% complete, ETA 00:00:27
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 340716966.667 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  340716966.667 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,59,59,49,651      L1-dcache-loads                                               (32.00%)
    1,59,22,33,250      L1-dcache-loads                                               (26.76%)
       4,96,01,284      L1-dcache-load-misses     #    3.11% of all L1-dcache hits    (21.20%)
       1,95,88,845      LLC-loads                                                     (25.70%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         90,70,540      L1-icache-load-misses                                         (30.47%)
    1,60,82,24,595      dTLB-loads                                                    (22.82%)
         58,03,096      dTLB-load-misses          #    0.36% of all dTLB cache hits   (25.84%)
         24,44,275      iTLB-loads                                                    (19.38%)
          4,00,727      iTLB-load-misses          #   16.39% of all iTLB cache hits   (27.84%)
   <not supported>      L1-dcache-prefetches                                        
       1,51,29,526      L1-dcache-prefetch-misses                                     (30.78%)

       1.945791804 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 45, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 89.22% complete, ETA 00:00:25
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 169465288.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  169465288.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,20,81,82,850      L1-dcache-loads                                               (35.79%)
    1,17,87,22,649      L1-dcache-loads                                               (34.26%)
       5,58,24,965      L1-dcache-load-misses     #    4.68% of all L1-dcache hits    (24.90%)
       2,88,74,561      LLC-loads                                                     (24.96%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         59,05,294      L1-icache-load-misses                                         (32.28%)
    1,23,20,30,058      dTLB-loads                                                    (26.00%)
         94,97,159      dTLB-load-misses          #    0.77% of all dTLB cache hits   (20.27%)
         11,92,581      iTLB-loads                                                    (18.43%)
            88,015      iTLB-load-misses          #    7.38% of all iTLB cache hits   (27.33%)
   <not supported>      L1-dcache-prefetches                                        
       1,86,23,608      L1-dcache-prefetch-misses                                     (36.11%)

       2.023097413 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 46, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 90.20% complete, ETA 00:00:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 350930041.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  350930041.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,71,26,48,022      L1-dcache-loads                                               (33.89%)
    1,67,70,53,269      L1-dcache-loads                                               (34.89%)
       5,49,91,007      L1-dcache-load-misses     #    3.24% of all L1-dcache hits    (23.28%)
       2,14,81,077      LLC-loads                                                     (21.76%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,14,90,848      L1-icache-load-misses                                         (30.45%)
    1,65,22,51,333      dTLB-loads                                                    (28.47%)
         55,14,590      dTLB-load-misses          #    0.33% of all dTLB cache hits   (20.40%)
         27,33,581      iTLB-loads                                                    (19.70%)
          3,17,444      iTLB-load-misses          #   11.61% of all iTLB cache hits   (28.76%)
   <not supported>      L1-dcache-prefetches                                        
       2,17,96,621      L1-dcache-prefetch-misses                                     (37.52%)

       1.972031105 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 46, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 91.18% complete, ETA 00:00:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 177213938.500 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  177213938.500 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,24,72,05,579      L1-dcache-loads                                               (35.46%)
    1,23,94,32,081      L1-dcache-loads                                               (31.27%)
       5,67,66,935      L1-dcache-load-misses     #    4.57% of all L1-dcache hits    (22.59%)
       2,94,81,760      LLC-loads                                                     (29.36%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         84,39,825      L1-icache-load-misses                                         (33.04%)
    1,24,11,17,653      dTLB-loads                                                    (21.50%)
       1,06,20,573      dTLB-load-misses          #    0.86% of all dTLB cache hits   (25.44%)
         14,59,486      iTLB-loads                                                    (19.56%)
          5,77,826      iTLB-load-misses          #   39.59% of all iTLB cache hits   (26.92%)
   <not supported>      L1-dcache-prefetches                                        
       1,90,76,112      L1-dcache-prefetch-misses                                     (35.49%)

       2.057241867 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 47, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 92.16% complete, ETA 00:00:18
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 356932314.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  356932314.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,72,76,48,699      L1-dcache-loads                                               (29.82%)
    1,67,46,81,880      L1-dcache-loads                                               (23.42%)
       6,08,62,221      L1-dcache-load-misses     #    3.58% of all L1-dcache hits    (30.39%)
       2,30,55,595      LLC-loads                                                     (29.35%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         87,47,309      L1-icache-load-misses                                         (35.57%)
    1,63,61,72,466      dTLB-loads                                                    (22.03%)
         56,36,889      dTLB-load-misses          #    0.34% of all dTLB cache hits   (25.01%)
         26,35,000      iTLB-loads                                                    (19.31%)
          3,13,247      iTLB-load-misses          #   11.89% of all iTLB cache hits   (28.20%)
   <not supported>      L1-dcache-prefetches                                        
       2,20,89,384      L1-dcache-prefetch-misses                                     (37.43%)

       2.016086609 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 47, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 93.14% complete, ETA 00:00:16
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 173255257.333 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  173255257.333 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,13,88,32,496      L1-dcache-loads                                               (30.05%)
    1,10,01,54,720      L1-dcache-loads                                               (22.17%)
       5,60,02,917      L1-dcache-load-misses     #    5.00% of all L1-dcache hits    (28.94%)
       2,93,87,445      LLC-loads                                                     (31.22%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         54,58,574      L1-icache-load-misses                                         (39.10%)
    1,13,68,94,690      dTLB-loads                                                    (20.91%)
       1,04,28,352      dTLB-load-misses          #    0.92% of all dTLB cache hits   (26.20%)
         12,35,500      iTLB-loads                                                    (18.82%)
          1,83,607      iTLB-load-misses          #   14.86% of all iTLB cache hits   (27.81%)
   <not supported>      L1-dcache-prefetches                                        
       1,75,78,215      L1-dcache-prefetch-misses                                     (36.73%)

       2.031029319 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 48, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 94.12% complete, ETA 00:00:13
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 305228221.250 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  305228221.250 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    2,03,06,18,029      L1-dcache-loads                                               (38.49%)
    1,94,38,13,680      L1-dcache-loads                                               (25.59%)
       6,13,63,158      L1-dcache-load-misses     #    3.09% of all L1-dcache hits    (21.19%)
       2,38,36,907      LLC-loads                                                     (26.92%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         87,42,255      L1-icache-load-misses                                         (36.77%)
    2,03,62,37,875      dTLB-loads                                                    (27.06%)
         57,53,259      dTLB-load-misses          #    0.28% of all dTLB cache hits   (20.58%)
         33,88,669      iTLB-loads                                                    (19.18%)
          3,81,595      iTLB-load-misses          #   11.26% of all iTLB cache hits   (28.89%)
   <not supported>      L1-dcache-prefetches                                        
       2,17,62,967      L1-dcache-prefetch-misses                                     (37.78%)

       2.217061506 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 48, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 95.10% complete, ETA 00:00:11
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 158613073.429 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  158613073.429 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,16,73,07,405      L1-dcache-loads                                               (38.14%)
    1,11,07,65,056      L1-dcache-loads                                               (39.16%)
       5,51,08,224      L1-dcache-load-misses     #    4.84% of all L1-dcache hits    (22.18%)
       3,02,64,063      LLC-loads                                                     (21.62%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         65,21,040      L1-icache-load-misses                                         (31.61%)
    1,13,00,23,238      dTLB-loads                                                    (28.35%)
       1,15,14,811      dTLB-load-misses          #    1.02% of all dTLB cache hits   (18.95%)
         12,77,047      iTLB-loads                                                    (18.63%)
            67,681      iTLB-load-misses          #    5.30% of all iTLB cache hits   (27.67%)
   <not supported>      L1-dcache-prefetches                                        
       1,97,58,005      L1-dcache-prefetch-misses                                     (36.40%)

       2.068480628 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 49, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 96.08% complete, ETA 00:00:09
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 349618372.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  349618372.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,69,98,29,334      L1-dcache-loads                                               (31.48%)
    1,61,46,85,155      L1-dcache-loads                                               (21.91%)
       5,38,71,647      L1-dcache-load-misses     #    3.25% of all L1-dcache hits    (23.63%)
       2,11,52,849      LLC-loads                                                     (29.97%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         92,31,705      L1-icache-load-misses                                         (36.37%)
    1,68,17,72,237      dTLB-loads                                                    (22.32%)
         57,67,365      dTLB-load-misses          #    0.34% of all dTLB cache hits   (24.49%)
         24,87,582      iTLB-loads                                                    (19.64%)
          3,91,517      iTLB-load-misses          #   15.74% of all iTLB cache hits   (28.62%)
   <not supported>      L1-dcache-prefetches                                        
       1,72,09,830      L1-dcache-prefetch-misses                                     (36.43%)

       1.994807004 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 49, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 97.06% complete, ETA 00:00:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 175403625.167 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  175403625.167 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,41,85,94,964      L1-dcache-loads                                               (35.11%)
    1,40,49,10,342      L1-dcache-loads                                               (36.23%)
       6,19,21,920      L1-dcache-load-misses     #    4.39% of all L1-dcache hits    (25.82%)
       3,01,74,063      LLC-loads                                                     (22.50%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         85,82,850      L1-icache-load-misses                                         (31.98%)
    1,43,17,64,966      dTLB-loads                                                    (27.18%)
         99,80,643      dTLB-load-misses          #    0.70% of all dTLB cache hits   (19.41%)
         19,64,595      iTLB-loads                                                    (18.88%)
          3,63,986      iTLB-load-misses          #   18.53% of all iTLB cache hits   (27.20%)
   <not supported>      L1-dcache-prefetches                                        
       1,94,62,395      L1-dcache-prefetch-misses                                     (35.88%)

       2.082810382 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 50, mapType = ART, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 98.04% complete, ETA 00:00:04
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 336113845.000 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  336113845.000 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,73,03,12,885      L1-dcache-loads                                               (35.81%)
    1,67,83,23,958      L1-dcache-loads                                               (30.37%)
       5,41,38,187      L1-dcache-load-misses     #    3.18% of all L1-dcache hits    (21.82%)
       2,05,22,445      LLC-loads                                                     (27.67%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
       1,30,90,617      L1-icache-load-misses                                         (30.68%)
    1,66,38,69,687      dTLB-loads                                                    (20.05%)
         46,48,168      dTLB-load-misses          #    0.28% of all dTLB cache hits   (27.39%)
         23,50,126      iTLB-loads                                                    (19.62%)
          3,34,829      iTLB-load-misses          #   14.25% of all iTLB cache hits   (29.07%)
   <not supported>      L1-dcache-prefetches                                        
       1,58,67,688      L1-dcache-prefetch-misses                                     (37.39%)

       2.041319729 seconds time elapsed



# JMH version: 1.23
# VM version: JDK 12.0.2, Java HotSpot(TM) 64-Bit Server VM, 12.0.2+10
# VM invoker: /usr/lib/jvm/java-12-oracle/bin/java
# VM options: <none>
# Warmup: <none>
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert
# Parameters: (limit = 50, mapType = TREE_MAP, workloadFile = e_uniform_100000_randint_txn.dat)

# Run progress: 99.02% complete, ETA 00:00:02
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console

Iteration   1: 175748439.833 ns/op

> Task :jmh
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert":
  175748439.833 ns/op

Secondary result "com.github.rohansuri.art.ycsb.Long.E.rangeScanAndInsert:路perf":
Perf stats:
--------------------------------------------------

    1,15,67,30,385      L1-dcache-loads                                               (29.53%)
    1,12,64,70,027      L1-dcache-loads                                               (36.55%)
       5,59,55,074      L1-dcache-load-misses     #    4.90% of all L1-dcache hits    (22.09%)
       2,77,02,451      LLC-loads                                                     (22.46%)
   <not supported>      LLC-load-misses                                             
   <not supported>      L1-icache-loads                                             
         60,49,391      L1-icache-load-misses                                         (32.53%)
    1,20,74,65,730      dTLB-loads                                                    (26.81%)
         87,45,920      dTLB-load-misses          #    0.72% of all dTLB cache hits   (20.44%)
         10,30,820      iTLB-loads                                                    (19.01%)
          1,53,043      iTLB-load-misses          #   14.85% of all iTLB cache hits   (28.44%)
   <not supported>      L1-dcache-prefetches                                        
       1,64,55,342      L1-dcache-prefetch-misses                                     (37.47%)

       2.053355421 seconds time elapsed



# Run complete. Total time: 00:03:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        (limit)  (mapType)                    (workloadFile)  Mode  Cnt          Score   Error  Units
Long.E.rangeScanAndInsert              0        ART  e_uniform_100000_randint_txn.dat  avgt       307799689.500          ns/op
Long.E.rangeScanAndInsert:路cpi         0        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        0        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              0   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       163445746.714          ns/op
Long.E.rangeScanAndInsert:路cpi         0   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        0   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              1        ART  e_uniform_100000_randint_txn.dat  avgt       334758737.000          ns/op
Long.E.rangeScanAndInsert:路cpi         1        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        1        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              1   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       170389319.000          ns/op
Long.E.rangeScanAndInsert:路cpi         1   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        1   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              2        ART  e_uniform_100000_randint_txn.dat  avgt       354732605.000          ns/op
Long.E.rangeScanAndInsert:路cpi         2        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        2        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              2   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       174196571.667          ns/op
Long.E.rangeScanAndInsert:路cpi         2   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        2   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              3        ART  e_uniform_100000_randint_txn.dat  avgt       306097522.750          ns/op
Long.E.rangeScanAndInsert:路cpi         3        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        3        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              3   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       181490015.167          ns/op
Long.E.rangeScanAndInsert:路cpi         3   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        3   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              4        ART  e_uniform_100000_randint_txn.dat  avgt       360664505.667          ns/op
Long.E.rangeScanAndInsert:路cpi         4        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        4        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              4   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       174390861.333          ns/op
Long.E.rangeScanAndInsert:路cpi         4   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        4   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              5        ART  e_uniform_100000_randint_txn.dat  avgt       310412822.000          ns/op
Long.E.rangeScanAndInsert:路cpi         5        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        5        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              5   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       172114481.000          ns/op
Long.E.rangeScanAndInsert:路cpi         5   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        5   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              6        ART  e_uniform_100000_randint_txn.dat  avgt       352836954.333          ns/op
Long.E.rangeScanAndInsert:路cpi         6        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        6        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              6   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       169155478.167          ns/op
Long.E.rangeScanAndInsert:路cpi         6   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        6   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              7        ART  e_uniform_100000_randint_txn.dat  avgt       300513623.000          ns/op
Long.E.rangeScanAndInsert:路cpi         7        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        7        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              7   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       172252048.833          ns/op
Long.E.rangeScanAndInsert:路cpi         7   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        7   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              8        ART  e_uniform_100000_randint_txn.dat  avgt       302120530.250          ns/op
Long.E.rangeScanAndInsert:路cpi         8        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        8        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              8   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       186728316.833          ns/op
Long.E.rangeScanAndInsert:路cpi         8   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        8   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              9        ART  e_uniform_100000_randint_txn.dat  avgt       315144446.250          ns/op
Long.E.rangeScanAndInsert:路cpi         9        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        9        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert              9   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       173243427.333          ns/op
Long.E.rangeScanAndInsert:路cpi         9   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf        9   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             10        ART  e_uniform_100000_randint_txn.dat  avgt       336355341.333          ns/op
Long.E.rangeScanAndInsert:路cpi        10        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       10        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             10   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       145951271.857          ns/op
Long.E.rangeScanAndInsert:路cpi        10   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       10   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             11        ART  e_uniform_100000_randint_txn.dat  avgt       308717344.250          ns/op
Long.E.rangeScanAndInsert:路cpi        11        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       11        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             11   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       190386825.000          ns/op
Long.E.rangeScanAndInsert:路cpi        11   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       11   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             12        ART  e_uniform_100000_randint_txn.dat  avgt       297443817.750          ns/op
Long.E.rangeScanAndInsert:路cpi        12        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       12        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             12   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       181299636.500          ns/op
Long.E.rangeScanAndInsert:路cpi        12   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       12   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             13        ART  e_uniform_100000_randint_txn.dat  avgt       307902358.750          ns/op
Long.E.rangeScanAndInsert:路cpi        13        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       13        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             13   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       183169596.667          ns/op
Long.E.rangeScanAndInsert:路cpi        13   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       13   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             14        ART  e_uniform_100000_randint_txn.dat  avgt       338594901.667          ns/op
Long.E.rangeScanAndInsert:路cpi        14        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       14        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             14   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       168715722.500          ns/op
Long.E.rangeScanAndInsert:路cpi        14   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       14   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             15        ART  e_uniform_100000_randint_txn.dat  avgt       308251586.000          ns/op
Long.E.rangeScanAndInsert:路cpi        15        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       15        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             15   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       174962561.167          ns/op
Long.E.rangeScanAndInsert:路cpi        15   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       15   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             16        ART  e_uniform_100000_randint_txn.dat  avgt       346231197.667          ns/op
Long.E.rangeScanAndInsert:路cpi        16        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       16        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             16   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       171763707.000          ns/op
Long.E.rangeScanAndInsert:路cpi        16   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       16   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             17        ART  e_uniform_100000_randint_txn.dat  avgt       346307639.333          ns/op
Long.E.rangeScanAndInsert:路cpi        17        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       17        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             17   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       163879387.143          ns/op
Long.E.rangeScanAndInsert:路cpi        17   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       17   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             18        ART  e_uniform_100000_randint_txn.dat  avgt       354097893.333          ns/op
Long.E.rangeScanAndInsert:路cpi        18        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       18        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             18   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       171519259.500          ns/op
Long.E.rangeScanAndInsert:路cpi        18   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       18   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             19        ART  e_uniform_100000_randint_txn.dat  avgt       374817781.333          ns/op
Long.E.rangeScanAndInsert:路cpi        19        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       19        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             19   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       167403425.667          ns/op
Long.E.rangeScanAndInsert:路cpi        19   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       19   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             20        ART  e_uniform_100000_randint_txn.dat  avgt       348427689.333          ns/op
Long.E.rangeScanAndInsert:路cpi        20        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       20        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             20   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       170724746.167          ns/op
Long.E.rangeScanAndInsert:路cpi        20   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       20   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             21        ART  e_uniform_100000_randint_txn.dat  avgt       308476835.250          ns/op
Long.E.rangeScanAndInsert:路cpi        21        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       21        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             21   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       175329804.000          ns/op
Long.E.rangeScanAndInsert:路cpi        21   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       21   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             22        ART  e_uniform_100000_randint_txn.dat  avgt       305344774.750          ns/op
Long.E.rangeScanAndInsert:路cpi        22        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       22        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             22   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       169033091.333          ns/op
Long.E.rangeScanAndInsert:路cpi        22   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       22   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             23        ART  e_uniform_100000_randint_txn.dat  avgt       298682008.250          ns/op
Long.E.rangeScanAndInsert:路cpi        23        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       23        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             23   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       163999596.286          ns/op
Long.E.rangeScanAndInsert:路cpi        23   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       23   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             24        ART  e_uniform_100000_randint_txn.dat  avgt       298042768.250          ns/op
Long.E.rangeScanAndInsert:路cpi        24        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       24        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             24   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       180993757.000          ns/op
Long.E.rangeScanAndInsert:路cpi        24   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       24   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             25        ART  e_uniform_100000_randint_txn.dat  avgt       348344051.333          ns/op
Long.E.rangeScanAndInsert:路cpi        25        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       25        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             25   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       149714414.286          ns/op
Long.E.rangeScanAndInsert:路cpi        25   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       25   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             26        ART  e_uniform_100000_randint_txn.dat  avgt       306184290.750          ns/op
Long.E.rangeScanAndInsert:路cpi        26        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       26        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             26   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       174254766.833          ns/op
Long.E.rangeScanAndInsert:路cpi        26   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       26   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             27        ART  e_uniform_100000_randint_txn.dat  avgt       417059674.333          ns/op
Long.E.rangeScanAndInsert:路cpi        27        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       27        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             27   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       138804283.500          ns/op
Long.E.rangeScanAndInsert:路cpi        27   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       27   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             28        ART  e_uniform_100000_randint_txn.dat  avgt       344174327.333          ns/op
Long.E.rangeScanAndInsert:路cpi        28        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       28        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             28   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       174135095.667          ns/op
Long.E.rangeScanAndInsert:路cpi        28   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       28   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             29        ART  e_uniform_100000_randint_txn.dat  avgt       302290829.250          ns/op
Long.E.rangeScanAndInsert:路cpi        29        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       29        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             29   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       150425587.857          ns/op
Long.E.rangeScanAndInsert:路cpi        29   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       29   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             30        ART  e_uniform_100000_randint_txn.dat  avgt       335445471.667          ns/op
Long.E.rangeScanAndInsert:路cpi        30        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       30        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             30   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       168505958.333          ns/op
Long.E.rangeScanAndInsert:路cpi        30   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       30   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             31        ART  e_uniform_100000_randint_txn.dat  avgt       308320612.250          ns/op
Long.E.rangeScanAndInsert:路cpi        31        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       31        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             31   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       175271403.333          ns/op
Long.E.rangeScanAndInsert:路cpi        31   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       31   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             32        ART  e_uniform_100000_randint_txn.dat  avgt       305171722.250          ns/op
Long.E.rangeScanAndInsert:路cpi        32        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       32        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             32   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       178146763.000          ns/op
Long.E.rangeScanAndInsert:路cpi        32   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       32   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             33        ART  e_uniform_100000_randint_txn.dat  avgt       365381692.000          ns/op
Long.E.rangeScanAndInsert:路cpi        33        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       33        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             33   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       184416868.500          ns/op
Long.E.rangeScanAndInsert:路cpi        33   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       33   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             34        ART  e_uniform_100000_randint_txn.dat  avgt       300402284.000          ns/op
Long.E.rangeScanAndInsert:路cpi        34        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       34        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             34   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       181085168.167          ns/op
Long.E.rangeScanAndInsert:路cpi        34   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       34   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             35        ART  e_uniform_100000_randint_txn.dat  avgt       341228389.667          ns/op
Long.E.rangeScanAndInsert:路cpi        35        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       35        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             35   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       173060375.833          ns/op
Long.E.rangeScanAndInsert:路cpi        35   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       35   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             36        ART  e_uniform_100000_randint_txn.dat  avgt       333724264.333          ns/op
Long.E.rangeScanAndInsert:路cpi        36        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       36        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             36   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       171324727.667          ns/op
Long.E.rangeScanAndInsert:路cpi        36   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       36   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             37        ART  e_uniform_100000_randint_txn.dat  avgt       296880536.500          ns/op
Long.E.rangeScanAndInsert:路cpi        37        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       37        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             37   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       172941318.167          ns/op
Long.E.rangeScanAndInsert:路cpi        37   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       37   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             38        ART  e_uniform_100000_randint_txn.dat  avgt       366893217.667          ns/op
Long.E.rangeScanAndInsert:路cpi        38        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       38        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             38   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       179734825.667          ns/op
Long.E.rangeScanAndInsert:路cpi        38   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       38   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             39        ART  e_uniform_100000_randint_txn.dat  avgt       356464921.333          ns/op
Long.E.rangeScanAndInsert:路cpi        39        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       39        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             39   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       174204274.333          ns/op
Long.E.rangeScanAndInsert:路cpi        39   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       39   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             40        ART  e_uniform_100000_randint_txn.dat  avgt       356577970.333          ns/op
Long.E.rangeScanAndInsert:路cpi        40        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       40        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             40   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       159298798.000          ns/op
Long.E.rangeScanAndInsert:路cpi        40   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       40   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             41        ART  e_uniform_100000_randint_txn.dat  avgt       301868813.250          ns/op
Long.E.rangeScanAndInsert:路cpi        41        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       41        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             41   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       190675106.833          ns/op
Long.E.rangeScanAndInsert:路cpi        41   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       41   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             42        ART  e_uniform_100000_randint_txn.dat  avgt       342463492.333          ns/op
Long.E.rangeScanAndInsert:路cpi        42        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       42        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             42   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       187007741.833          ns/op
Long.E.rangeScanAndInsert:路cpi        42   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       42   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             43        ART  e_uniform_100000_randint_txn.dat  avgt       307074590.000          ns/op
Long.E.rangeScanAndInsert:路cpi        43        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       43        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             43   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       156468341.000          ns/op
Long.E.rangeScanAndInsert:路cpi        43   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       43   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             44        ART  e_uniform_100000_randint_txn.dat  avgt       308113738.750          ns/op
Long.E.rangeScanAndInsert:路cpi        44        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       44        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             44   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       183808376.333          ns/op
Long.E.rangeScanAndInsert:路cpi        44   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       44   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             45        ART  e_uniform_100000_randint_txn.dat  avgt       340716966.667          ns/op
Long.E.rangeScanAndInsert:路cpi        45        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       45        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             45   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       169465288.333          ns/op
Long.E.rangeScanAndInsert:路cpi        45   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       45   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             46        ART  e_uniform_100000_randint_txn.dat  avgt       350930041.333          ns/op
Long.E.rangeScanAndInsert:路cpi        46        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       46        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             46   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       177213938.500          ns/op
Long.E.rangeScanAndInsert:路cpi        46   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       46   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             47        ART  e_uniform_100000_randint_txn.dat  avgt       356932314.333          ns/op
Long.E.rangeScanAndInsert:路cpi        47        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       47        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             47   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       173255257.333          ns/op
Long.E.rangeScanAndInsert:路cpi        47   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       47   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             48        ART  e_uniform_100000_randint_txn.dat  avgt       305228221.250          ns/op
Long.E.rangeScanAndInsert:路cpi        48        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       48        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             48   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       158613073.429          ns/op
Long.E.rangeScanAndInsert:路cpi        48   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       48   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             49        ART  e_uniform_100000_randint_txn.dat  avgt       349618372.000          ns/op
Long.E.rangeScanAndInsert:路cpi        49        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       49        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             49   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       175403625.167          ns/op
Long.E.rangeScanAndInsert:路cpi        49   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       49   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             50        ART  e_uniform_100000_randint_txn.dat  avgt       336113845.000          ns/op
Long.E.rangeScanAndInsert:路cpi        50        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       50        ART  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---
Long.E.rangeScanAndInsert             50   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt       175748439.833          ns/op
Long.E.rangeScanAndInsert:路cpi        50   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            CPI
Long.E.rangeScanAndInsert:路perf       50   TREE_MAP  e_uniform_100000_randint_txn.dat  avgt                 NaN            ---

Benchmark result is saved to /home/rohansuri/adaptive-radix-tree/art/build/reports/jmh/results.txt

Deprecated Gradle features were used in this build, making it incompatible with Gradle 6.0.
Use '--warning-mode all' to show the individual deprecation warnings.
See https://docs.gradle.org/5.6.2/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 4m 14s
9 actionable tasks: 9 executed
